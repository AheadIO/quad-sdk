<launch>
    <arg name="world"   default="flat"/>
    <arg name="controller"      default="inverse_dynamics"/>
    <arg name="robot_name"/>
    <arg name="init_pose"/>

    <include file="$(find quad_utils)/launch/robot_driver.launch">
      <arg name="controller" value="$(arg controller)"/>
      <arg name="mocap" value="false"/>
      <arg name="is_hw" value="false"/>
    </include>

    <include file="$(find quad_utils)/launch/visualization.launch">
    </include>

    <param name="robot_description_sdf" textfile="$(find spirit_description)/sdf_mesh/spirit.sdf" />
    <node name="spawn_sdf_model" pkg="gazebo_ros" type="spawn_model"
     args="$(arg init_pose) -sdf -param robot_description_sdf -model $(arg robot_name)"
     respawn="false" output="screen" />

    <node pkg="robot_state_publisher" type="state_publisher" 
          name="robot_state_publisher" output="screen"/>

    <rosparam file="$(find gazebo_scripts)/config/spirit_control.yaml" command="load"/>

    <node name="controller_spawner"
        pkg="controller_manager"
        type="spawner"
        respawn="false"
        output="screen"
        ns="spirit" 
        args="joint_controller joint_state_controller">
    </node> 

  <!-- Load the contact state publisher -->
  <node name="contact_state_publisher" pkg="gazebo_scripts" type="contact_state_publisher_node" output="screen"/>
    
</launch>