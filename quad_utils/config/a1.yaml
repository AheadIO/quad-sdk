global_body_planner:
  update_rate: 20
  num_calls: 1            # Number of times to call the planner
  max_planning_time: 0.25  # Maximum amount of time to run the planner
  start_state: [0.0,0.0,0.3,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]
  goal_state: [6.0,0.0,0.3,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]
  state_error_threshold: 25 #0.25
  startup_delay: 1.0      # Time to delay after starting node before planning
  replanning: true        # Boolean to determine if replanning is allowed
  H_MAX: 0.375            # Maximum height of leg base, m
  H_MIN: 0.075            # Minimum ground clearance of body corners, m
  H_NOM: 0.3              # Nominal ground clearance of body, m
  V_MAX: 3.0              # Maximum robot velocity, m/s (4.0 for cheetah, 2.5 for anymal)
  V_NOM: 0.5              # Nominal velocity, m/s (used during connect function)
  DY_MAX: 2.0             # Maximum yaw rate
  ROBOT_L: 0.4            # Length of robot body, m (0.6 cheetah, 0.554 ANYmal)
  ROBOT_W: 0.3            # Width of robot body, m (0.256 cheetah, 0.232 ANYmal)
  ROBOT_H: 0.04           # Vertical distance between leg base and bottom of robot, m (0.1 cheetah, 0.04 ANYmal)
  BODY_TRAVERSABILITY_THRESHOLD: 0.75 # Traversability threshold for valid body state
  CONTACT_TRAVERSABILITY_THRESHOLD: 0.01 # Traversability threshold for valid contact location
  M_CONST: 13.0           # Robot mass, kg (12 for spirit, 43 for cheetah, 30 for anymal)
  J_CONST: 1.0            # Moment of inertia about the robot's y axis (pitch)
  G_CONST: 9.81           # Gravity constant, m/s^2
  F_MIN: 0.0              # Minimum GRF, N
  F_MAX: 250.0            # Maximum GRF, N (800 for cheetah, 500 for anymal)
  PEAK_GRF_MIN: 4.0       # Minimum GRF in units of body weight
  PEAK_GRF_MAX: 7.0       # Maximum GRF in units of body weight
  MU: 0.5                # Friction coefficient (1.0 for Cheetah, 0.5 for ANYmal)
  T_S_MIN: 0.3            # Minimum stance time, s
  T_S_MAX: 0.3            # Maximum stance time, s
  T_F_MIN: 0.1            # Minimum flight time, s
  T_F_MAX: 0.4            # Maximum stance time, s
  KINEMATICS_RES: 0.03    # Resolution of kinematic feasibility checks, m
  TRAPPED_BUFFER_FACTOR: 4  #  Number of feasibility that must pass to not consider a state trapped
  BACKUP_TIME: 0.3        # Duration of backup after finding an invalid state, s
  BACKUP_RATIO: 0.5       # Ratio of trajectory to back up after finding an invalid state, s
  NUM_LEAP_SAMPLES: 10     # Number of actions computed for each extend function
  GOAL_BOUNDS: 0.5        # Distance threshold on reaching the goal (only used for vanilla RRT, not RRT-Connect)

local_planner:
  update_rate: 500 # Hz
  timestep: 0.03 # s
  horizon_length: 25 # timesteps
  cmd_vel_filter_const: 0.10
  cmd_vel_scale: 1.0
  last_cmd_vel_msg_time_max: 2.0
  stand_vel_threshold: 0.1
  stand_cmd_vel_threshold: 0.1
  stand_pos_error_threshold: 0.05

local_footstep_planner:
  grf_weight: 0.5
  period: 0.36 # s
  ground_clearance: 0.07
  hip_clearance: 0.1
  standing_error_threshold: 0.03 # m
  foothold_search_radius: 0.25
  foothold_obj_threshold: 0.6 # Note: For now must match /grid_map_filters/traversability_mask_lower_threshold/lower_threshold
  obj_fun_layer: traversability
  # duty_cycles: [0.3, 0.3, 0.3, 0.3]
  duty_cycles: [0.5, 0.5, 0.5, 0.5]
  phase_offsets: [0.0, 0.5, 0.5, 0.0]

nmpc_controller:
  panic_weights: 200.0
  constraint_panic_weights: 20.0
  Q_temporal_factor: 10.0
  R_temporal_factor: 1
  friction_coefficient: 0.3
  enable_variable_horizon: false
  min_horizon_length: 10
  enable_adaptive_complexity: false
  fixed_complex_idxs: [] # set to [] for none
  fixed_complex_head: 0 # set to 0 for none
  fixed_complex_tail: 0 # set to 0 for none
  body:
    x_dim: 12
    u_dim: 12
    g_dim: 28
    x_weights: [5.0, 5.0, 5.0, 0.5, 0.5, 0.5, 0.1, 0.1, 0.2, 0.05, 0.05, 0.01]
    u_weights: [!!float 5e-5, !!float 5e-5, !!float 5e-5, !!float 5e-5, !!float 5e-5, !!float 5e-5, !!float 5e-5, !!float 5e-5, !!float 5e-5, !!float 5e-5, !!float 5e-5, !!float 5e-5]
    x_lb: [!!float -2e19, !!float -2e19, 0, -3.14159, -3.14159, -3.14159, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19]
    x_ub: [!!float 2e19, !!float 2e19, !!float 2e19, 3.14159, 3.14159, 3.14159, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19]
    x_lb_soft: [!!float -2e19, !!float -2e19, 0, -3.14159, -3.14159, -3.14159, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19]
    x_ub_soft: [!!float 2e19, !!float 2e19, !!float 2e19, 3.14159, 3.14159, 3.14159, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19]
    u_lb: [!!float -2e19, !!float -2e19, 10, !!float -2e19, !!float -2e19, 10, !!float -2e19, !!float -2e19, 10, !!float -2e19, !!float -2e19, 10]
    u_ub: [!!float 2e19, !!float 2e19, 250, !!float 2e19, !!float 2e19, 250, !!float 2e19, !!float 2e19, 250, !!float 2e19, !!float 2e19, 250]
    g_lb: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19]
    g_ub: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
  feet:
    x_dim: 24
    u_dim: 24
    g_dim: 28
    x_weights: [7.51, 7.51, 7.51, 7.51, 7.51, 7.51, 7.51, 7.51, 7.51, 7.51, 7.51, 7.51, 0.111, 0.111, 0.111, 0.111, 0.111, 0.111, 0.111, 0.111, 0.111, 0.111, 0.111, 0.111]
    u_weights: [!!float 5e-5, !!float 5e-5, !!float 5e-5, !!float 5e-5, !!float 5e-5, !!float 5e-5, !!float 5e-5, !!float 5e-5, !!float 5e-5, !!float 5e-5, !!float 5e-5, !!float 5e-5, !!float 5e-5, !!float 5e-5, !!float 5e-5, !!float 5e-5, !!float 5e-5, !!float 5e-5, !!float 5e-5, !!float 5e-5, !!float 5e-5, !!float 5e-5, !!float 5e-5, !!float 5e-5]
    x_lb: [!!float -2e19, !!float -2e19,  !!float -2e19,  !!float -2e19,  !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19]
    x_ub: [!!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19]
    x_lb_soft: [!!float -2e19, !!float -2e19,  !!float -2e19,  !!float -2e19,  !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19]
    x_ub_soft: [!!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19]
    u_lb: [-99.9, -99.9, -99.9, -99.9, -99.9, -99.9, -99.9, -99.9, -99.9, -99.9, -99.9, -99.9, -99.9, -99.9, -99.9, -99.9, -99.9, -99.9, -99.9, -99.9, -99.9, -99.9, -99.9, -99.9]
    u_ub: [99.9, 99.9, 99.9, 99.9, 99.9, 99.9, 99.9, 99.9, 99.9, 99.9, 99.9, 99.9, 99.9, 99.9, 99.9, 99.9, 99.9, 99.9, 99.9, 99.9, 99.9, 99.9, 99.9, 99.9]
    g_lb: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, !!float -2e19, !!float -2e19,  !!float -2e19,  !!float -2e19]
    g_ub: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19]
  joints:
    x_dim: 24
    u_dim: 0
    g_dim: 52
    x_weights: []
    u_weights: []
    x_lb: [-0.707, -1.57, 0.001, -0.707, -1.57, 0.001, -0.707, -1.57, 0.001, -0.707, -1.57, 0.001, -37.71, -37.71, -25.11,-37.71, -37.71, -25.11,-37.71, -37.71, -25.11,-37.71, -37.71, -25.11]
    x_ub: [ 0.707,  3.14,  3.14,  0.707,  3.14,  3.14,  0.707,  3.14,  3.14,  0.707,  3.14,  3.14,  37.71,  37.71,  25.11, 37.71,  37.71,  25.11, 37.71,  37.71,  25.11, 37.71,  37.71,  25.11]
    x_lb_soft: [  -0.5, -1.57,   0.2,   -0.5, -1.57,   0.2,   -0.5, -1.57,   0.2,   -0.5, -1.57,   0.2, -35.0, -35.0, -24.0,-35.0, -35.0, -24.0,-35.0, -35.0, -24.0,-35.0, -35.0, -24.0]
    x_ub_soft: [   0.5,  3.14,   2.8,    0.5,  3.14,   2.8,    0.5,  3.14,   2.8,    0.5,  3.14,   2.8,  35.0,  35.0,  24.0, 35.0,  35.0,  24.0, 35.0,  35.0,  24.0, 35.0,  35.0,  24.0]
    u_lb: []
    u_ub: []
    g_lb: [!!float -2e19, !!float -2e19,  !!float -2e19,  !!float -2e19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, !!float -2e19, !!float -2e19,  !!float -2e19,  !!float -2e19, !!float -2e19, !!float -2e19,  !!float -2e19,  !!float -2e19,  !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19, !!float -2e19]
    g_ub: [!!float 2e19, !!float 2e19,  !!float 2e19,  !!float 2e19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, !!float 2e19, !!float 2e19,  !!float 2e19,  !!float 2e19, !!float 2e19, !!float 2e19,  !!float 2e19,  !!float 2e19,  !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19, !!float 2e19]
    
robot_driver:
  update_rate: 500
  publish_rate: 500
  mocap_rate: 360.0 # This must match the mocap frame rate or velocity estimates will be mis-scaled
  mocap_dropout_threshold: 0.027 # s
  filter_time_constant: 0.05 # s
  input_timeout: 0.1
  state_timeout: 0.1
  heartbeat_timeout: 0.2
  sit_kp: [10, 10, 10]
  sit_kd: [1, 1, 1]
  stand_kp: [35, 35, 35]
  stand_kd: [1, 1, 1]
  stance_kp: [10, 10, 10]
  stance_kd: [1, 1, 1]
  swing_kp: [10, 10, 10]
  swing_kd: [1, 1, 1]
  swing_kp_cart: [0, 0, 0] # N/m
  swing_kd_cart: [0, 0, 0]       # N/m
  safety_kp: [0, 0, 0]
  safety_kd: [2, 2, 2]
  stand_joint_angles: [0.0, 0.76, 1.52]
  sit_joint_angles: [0.0, 0.0, 0.2]
  torque_limit: [33.5, 33.5, 33.5]

  # Complementary filter coefficients in state-space form, 
  # which can be computed by c2d(1/s*(1-G(s))) and c2d(s*G(s)), 
  # where G(s) is a second-order low-pass filter
  low_pass_a: [1.863081589528582, -0.871860350323577, 1, 0]
  low_pass_b: [2, 0]
  low_pass_c: [1.469526956982712, -1.476621472298373]
  low_pass_d: [1.616290836790004]
  high_pass_a: [1.901347508294054, -0.905986628426631, 1, 0]
  high_pass_b: [0.062500000000000, 0]
  high_pass_c: [0.031912805108981, -0.028979795079613]
  high_pass_d: [0.0009996017974875904]