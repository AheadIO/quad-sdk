// Include Files
#include "spirit_utils/foot_jacobians.h"
#include <cmath>

// Function Definitions
//
// CALC_FOOT_JACOBIAN0
//     FOOT_JACOBIAN0 = CALC_FOOT_JACOBIAN0(IN1,IN2)
// Arguments    : const double in1[18]
//                const double in2[6]
//                double foot_jacobian0[9]
// Return Type  : void
//
namespace spirit_utils {
void calc_foot_jacobian0(const double in1[18], const double in2[6], Eigen::MatrixXf& foot_jacobian0)
{
  double foot_jacobian0_vector[9];
  double t10;
  double t11;
  double t12;
  double t13;
  double t14;
  double t16;
  double t17;
  double t19;
  double t2;
  double t3;
  double t37;
  double t38;
  double t39;
  double t4;
  double t46;
  double t47;
  double t5;
  double t53;
  double t54;
  double t57;
  double t58;
  double t6;
  double t62;
  double t68;
  double t7;
  double t75;
  double t8;
  double t80;
  double t80_tmp;
  double t88;
  double t9;

  //     This function was generated by the Symbolic Math Toolbox version 8.6.
  //     29-Jan-2021 12:10:37
  t2 = std::cos(in1[1]);
  t3 = std::cos(in1[6]);
  t4 = std::cos(in1[7]);
  t5 = std::cos(in1[8]);
  t6 = std::cos(in1[0]);
  t7 = std::cos(in1[2]);
  t8 = std::sin(in1[1]);
  t9 = std::sin(in1[6]);
  t10 = std::sin(in1[7]);
  t11 = std::sin(in1[8]);
  t12 = std::sin(in1[0]);
  t13 = std::sin(in1[2]);
  t14 = t6 * t7;
  t16 = t6 * t13;
  t17 = t7 * t12;
  t19 = t12 * t13;
  t88 = t2 * t3;
  t39 = t88 * t12 + t2 * t6 * t9;
  t37 = t16 + t8 * t17;
  t38 = t17 + t8 * t16;
  t46 = t88 * t6 + -(t2 * t9 * t12);
  t47 = t10 * t39;
  t16 = t14 + -(t8 * t19);
  t17 = t19 + -(t8 * t14);
  t53 = t4 * t46;
  t54 = t10 * t46;
  t80_tmp = t4 * t39;
  t80 = (t8 * t10 + t53) + -(t80_tmp * 6.123233995736766E-17);
  t57 = t3 * t38 + t9 * t16;
  t58 = t9 * t37 + t3 * t17;
  t6 = t9 * t38 - t3 * t16;
  t68 = t10 * t6;
  t75 = t47 + t54 * 6.123233995736766E-17;
  t16 = t3 * t37 + -(t9 * t17);
  t37 = t4 * t57;
  t62 = t4 * t58;
  t14 = t10 * t57;
  t39 = t10 * t58;
  t38 = t10 * t16;
  t3 = t4 * t6;
  t17 = (t2 * t10 * t13 + t37) + t3 * -6.123233995736766E-17;
  t9 = t68 + t14 * 6.123233995736766E-17;
  t19 = t4 * t16;
  t12 = (-(t2 * t7 * t10) + t62) + t19 * 6.123233995736766E-17;
  t88 = -t38 + t39 * 6.123233995736766E-17;
  t6 = -(in2[4] * t80) + in2[5] * (t5 * t80 + -(t11 * ((t4 * t8 + -t54) + t47 *
    6.123233995736766E-17)));
  t16 = t2 * t4;
  t17 = in2[4] * t17 + -(in2[5] * (t5 * t17 + -t11 * ((t16 * t13 - t14) + t68 *
    6.123233995736766E-17)));
  t16 = -(in2[4] * t12) + in2[5] * (t11 * ((t16 * t7 + t39) + t38 *
    6.123233995736766E-17) + t5 * t12);
  foot_jacobian0_vector[0] = (in2[3] * t58 + in2[4] * t88) - in2[5] * (t5 * t88 - t11 *
    (t62 * 6.123233995736766E-17 - t19));
  foot_jacobian0_vector[1] = (in2[5] * (t5 * t9 - t11 * (t37 * 6.123233995736766E-17 +
    t3)) - in2[3] * t57) - in2[4] * t9;
  foot_jacobian0_vector[2] = (in2[3] * t46 + in2[4] * t75) - in2[5] * (t5 * t75 - t11 *
    (t53 * 6.123233995736766E-17 + t80_tmp));
  foot_jacobian0_vector[3] = t16;
  foot_jacobian0_vector[4] = t17;
  foot_jacobian0_vector[5] = t6;
  foot_jacobian0_vector[6] = t16;
  foot_jacobian0_vector[7] = t17;
  foot_jacobian0_vector[8] = t6;
  // Map the array to the matrix
  // foot_jacobian0 = Eigen::Map<Eigen::MatrixXf>(foot_jacobian0_vector,3,3);
  foot_jacobian0 <<foot_jacobian0_vector[0], foot_jacobian0_vector[3], foot_jacobian0_vector[6],
                  -foot_jacobian0_vector[1], -foot_jacobian0_vector[4], -foot_jacobian0_vector[7],
                  -foot_jacobian0_vector[2],-foot_jacobian0_vector[5],-foot_jacobian0_vector[8];
}

void calc_foot_jacobian1(const double in1[18], const double in2[6], Eigen::MatrixXf& foot_jacobian1)
{
  double foot_jacobian1_vector[9];
  double t10;
  double t11;
  double t12;
  double t13;
  double t14;
  double t16;
  double t17;
  double t19;
  double t2;
  double t3;
  double t37;
  double t38;
  double t39;
  double t4;
  double t46;
  double t47;
  double t5;
  double t53;
  double t54;
  double t57;
  double t58;
  double t6;
  double t62;
  double t68;
  double t7;
  double t75;
  double t8;
  double t80;
  double t80_tmp;
  double t88;
  double t9;

  //     This function was generated by the Symbolic Math Toolbox version 8.6.
  //     29-Jan-2021 12:10:41
  t2 = std::cos(in1[1]);
  t3 = std::cos(in1[9]);
  t4 = std::cos(in1[10]);
  t5 = std::cos(in1[11]);
  t6 = std::cos(in1[0]);
  t7 = std::cos(in1[2]);
  t8 = std::sin(in1[1]);
  t9 = std::sin(in1[9]);
  t10 = std::sin(in1[10]);
  t11 = std::sin(in1[11]);
  t12 = std::sin(in1[0]);
  t13 = std::sin(in1[2]);
  t14 = t6 * t7;
  t16 = t6 * t13;
  t17 = t7 * t12;
  t19 = t12 * t13;
  t88 = t2 * t3;
  t39 = t88 * t12 + t2 * t6 * t9;
  t37 = t16 + t8 * t17;
  t38 = t17 + t8 * t16;
  t46 = t88 * t6 + -(t2 * t9 * t12);
  t47 = t10 * t39;
  t16 = t14 + -(t8 * t19);
  t17 = t19 + -(t8 * t14);
  t53 = t4 * t46;
  t54 = t10 * t46;
  t80_tmp = t4 * t39;
  t80 = (t8 * t10 + t53) + -(t80_tmp * 6.123233995736766E-17);
  t57 = t3 * t38 + t9 * t16;
  t58 = t9 * t37 + t3 * t17;
  t6 = t9 * t38 - t3 * t16;
  t68 = t10 * t6;
  t75 = t47 + t54 * 6.123233995736766E-17;
  t16 = t3 * t37 + -(t9 * t17);
  t37 = t4 * t57;
  t62 = t4 * t58;
  t14 = t10 * t57;
  t39 = t10 * t58;
  t38 = t10 * t16;
  t3 = t4 * t6;
  t17 = (t2 * t10 * t13 + t37) + t3 * -6.123233995736766E-17;
  t9 = t68 + t14 * 6.123233995736766E-17;
  t19 = t4 * t16;
  t12 = (-(t2 * t7 * t10) + t62) + t19 * 6.123233995736766E-17;
  t88 = -t38 + t39 * 6.123233995736766E-17;
  t6 = -(in2[4] * t80) + in2[5] * (t5 * t80 + -(t11 * ((t4 * t8 + -t54) + t47 *
    6.123233995736766E-17)));
  t16 = t2 * t4;
  t17 = in2[4] * t17 + -(in2[5] * (t5 * t17 + -t11 * ((t16 * t13 - t14) + t68 *
    6.123233995736766E-17)));
  t16 = -(in2[4] * t12) + in2[5] * (t11 * ((t16 * t7 + t39) + t38 *
    6.123233995736766E-17) + t5 * t12);
  foot_jacobian1_vector[0] = (in2[3] * t58 + in2[4] * t88) - in2[5] * (t5 * t88 - t11 *
    (t62 * 6.123233995736766E-17 - t19));
  foot_jacobian1_vector[1] = (in2[5] * (t5 * t9 - t11 * (t37 * 6.123233995736766E-17 +
    t3)) - in2[3] * t57) - in2[4] * t9;
  foot_jacobian1_vector[2] = (in2[3] * t46 + in2[4] * t75) - in2[5] * (t5 * t75 - t11 *
    (t53 * 6.123233995736766E-17 + t80_tmp));
  foot_jacobian1_vector[3] = t16;
  foot_jacobian1_vector[4] = t17;
  foot_jacobian1_vector[5] = t6;
  foot_jacobian1_vector[6] = t16;
  foot_jacobian1_vector[7] = t17;
  foot_jacobian1_vector[8] = t6;
    // Map the array to the matrix
  // foot_jacobian1 = Eigen::Map<Eigen::MatrixXf>(foot_jacobian1_vector,3,3);
    foot_jacobian1 <<foot_jacobian1_vector[0], foot_jacobian1_vector[3], foot_jacobian1_vector[6],
                  -foot_jacobian1_vector[1], -foot_jacobian1_vector[4], -foot_jacobian1_vector[7],
                  -foot_jacobian1_vector[2],-foot_jacobian1_vector[5],-foot_jacobian1_vector[8];
}

void calc_foot_jacobian2(const double in1[18], const double in2[6], Eigen::MatrixXf& foot_jacobian2)
{
  double foot_jacobian2_vector[9];
  double t10;
  double t11;
  double t12;
  double t13;
  double t14;
  double t16;
  double t17;
  double t19;
  double t2;
  double t3;
  double t37;
  double t38;
  double t39;
  double t4;
  double t46;
  double t47;
  double t5;
  double t53;
  double t54;
  double t57;
  double t58;
  double t6;
  double t62;
  double t68;
  double t7;
  double t75;
  double t8;
  double t80;
  double t80_tmp;
  double t88;
  double t9;

  //     This function was generated by the Symbolic Math Toolbox version 8.6.
  //     29-Jan-2021 12:10:44
  t2 = std::cos(in1[1]);
  t3 = std::cos(in1[12]);
  t4 = std::cos(in1[13]);
  t5 = std::cos(in1[14]);
  t6 = std::cos(in1[0]);
  t7 = std::cos(in1[2]);
  t8 = std::sin(in1[1]);
  t9 = std::sin(in1[12]);
  t10 = std::sin(in1[13]);
  t11 = std::sin(in1[14]);
  t12 = std::sin(in1[0]);
  t13 = std::sin(in1[2]);
  t14 = t6 * t7;
  t16 = t6 * t13;
  t17 = t7 * t12;
  t19 = t12 * t13;
  t88 = t2 * t3;
  t39 = t88 * t12 + t2 * t6 * t9;
  t37 = t16 + t8 * t17;
  t38 = t17 + t8 * t16;
  t46 = t88 * t6 + -(t2 * t9 * t12);
  t47 = t10 * t39;
  t16 = t14 + -(t8 * t19);
  t17 = t19 + -(t8 * t14);
  t53 = t4 * t46;
  t54 = t10 * t46;
  t80_tmp = t4 * t39;
  t80 = (t8 * t10 + t53) + -(t80_tmp * 6.123233995736766E-17);
  t57 = t3 * t38 + t9 * t16;
  t58 = t9 * t37 + t3 * t17;
  t6 = t9 * t38 - t3 * t16;
  t68 = t10 * t6;
  t75 = t47 + t54 * 6.123233995736766E-17;
  t16 = t3 * t37 + -(t9 * t17);
  t37 = t4 * t57;
  t62 = t4 * t58;
  t14 = t10 * t57;
  t39 = t10 * t58;
  t38 = t10 * t16;
  t3 = t4 * t6;
  t17 = (t2 * t10 * t13 + t37) + t3 * -6.123233995736766E-17;
  t9 = t68 + t14 * 6.123233995736766E-17;
  t19 = t4 * t16;
  t12 = (-(t2 * t7 * t10) + t62) + t19 * 6.123233995736766E-17;
  t88 = -t38 + t39 * 6.123233995736766E-17;
  t6 = -(in2[4] * t80) + in2[5] * (t5 * t80 + -(t11 * ((t4 * t8 + -t54) + t47 *
    6.123233995736766E-17)));
  t16 = t2 * t4;
  t17 = in2[4] * t17 + -(in2[5] * (t5 * t17 + -t11 * ((t16 * t13 - t14) + t68 *
    6.123233995736766E-17)));
  t16 = -(in2[4] * t12) + in2[5] * (t11 * ((t16 * t7 + t39) + t38 *
    6.123233995736766E-17) + t5 * t12);
  foot_jacobian2_vector[0] = (-in2[3] * t58 + in2[4] * t88) - in2[5] * (t5 * t88 - t11 *
    (t62 * 6.123233995736766E-17 - t19));
  foot_jacobian2_vector[1] = (in2[5] * (t5 * t9 - t11 * (t37 * 6.123233995736766E-17 +
    t3)) + in2[3] * t57) - in2[4] * t9;
  foot_jacobian2_vector[2] = (-in2[3] * t46 + in2[4] * t75) - in2[5] * (t5 * t75 - t11 *
    (t53 * 6.123233995736766E-17 + t80_tmp));
  foot_jacobian2_vector[3] = t16;
  foot_jacobian2_vector[4] = t17;
  foot_jacobian2_vector[5] = t6;
  foot_jacobian2_vector[6] = t16;
  foot_jacobian2_vector[7] = t17;
  foot_jacobian2_vector[8] = t6;
    // Map the array to the matrix
  // foot_jacobian2 = Eigen::Map<Eigen::MatrixXf>(foot_jacobian2_vector,3,3);
    foot_jacobian2 <<foot_jacobian2_vector[0], foot_jacobian2_vector[3], foot_jacobian2_vector[6],
                  -foot_jacobian2_vector[1], -foot_jacobian2_vector[4], -foot_jacobian2_vector[7],
                  -foot_jacobian2_vector[2],-foot_jacobian2_vector[5],-foot_jacobian2_vector[8];
}

void calc_foot_jacobian3(const double in1[18], const double in2[6], Eigen::MatrixXf& foot_jacobian3)
{
  double foot_jacobian3_vector[9];
  double t10;
  double t11;
  double t12;
  double t13;
  double t14;
  double t16;
  double t17;
  double t19;
  double t2;
  double t3;
  double t37;
  double t38;
  double t39;
  double t4;
  double t46;
  double t47;
  double t5;
  double t53;
  double t54;
  double t57;
  double t58;
  double t6;
  double t62;
  double t68;
  double t7;
  double t75;
  double t8;
  double t80;
  double t80_tmp;
  double t88;
  double t9;

  //     This function was generated by the Symbolic Math Toolbox version 8.6.
  //     29-Jan-2021 12:10:48
  t2 = std::cos(in1[1]);
  t3 = std::cos(in1[15]);
  t4 = std::cos(in1[16]);
  t5 = std::cos(in1[17]);
  t6 = std::cos(in1[0]);
  t7 = std::cos(in1[2]);
  t8 = std::sin(in1[1]);
  t9 = std::sin(in1[15]);
  t10 = std::sin(in1[16]);
  t11 = std::sin(in1[17]);
  t12 = std::sin(in1[0]);
  t13 = std::sin(in1[2]);
  t14 = t6 * t7;
  t16 = t6 * t13;
  t17 = t7 * t12;
  t19 = t12 * t13;
  t88 = t2 * t3;
  t39 = t88 * t12 + t2 * t6 * t9;
  t37 = t16 + t8 * t17;
  t38 = t17 + t8 * t16;
  t46 = t88 * t6 + -(t2 * t9 * t12);
  t47 = t10 * t39;
  t16 = t14 + -(t8 * t19);
  t17 = t19 + -(t8 * t14);
  t53 = t4 * t46;
  t54 = t10 * t46;
  t80_tmp = t4 * t39;
  t80 = (t8 * t10 + t53) + -(t80_tmp * 6.123233995736766E-17);
  t57 = t3 * t38 + t9 * t16;
  t58 = t9 * t37 + t3 * t17;
  t6 = t9 * t38 - t3 * t16;
  t68 = t10 * t6;
  t75 = t47 + t54 * 6.123233995736766E-17;
  t16 = t3 * t37 + -(t9 * t17);
  t37 = t4 * t57;
  t62 = t4 * t58;
  t14 = t10 * t57;
  t39 = t10 * t58;
  t38 = t10 * t16;
  t3 = t4 * t6;
  t17 = (t2 * t10 * t13 + t37) + t3 * -6.123233995736766E-17;
  t9 = t68 + t14 * 6.123233995736766E-17;
  t19 = t4 * t16;
  t12 = (-(t2 * t7 * t10) + t62) + t19 * 6.123233995736766E-17;
  t88 = -t38 + t39 * 6.123233995736766E-17;
  t6 = -(in2[4] * t80) + in2[5] * (t5 * t80 + -(t11 * ((t4 * t8 + -t54) + t47 *
    6.123233995736766E-17)));
  t16 = t2 * t4;
  t17 = in2[4] * t17 + -(in2[5] * (t5 * t17 + -t11 * ((t16 * t13 - t14) + t68 *
    6.123233995736766E-17)));
  t16 = -(in2[4] * t12) + in2[5] * (t11 * ((t16 * t7 + t39) + t38 *
    6.123233995736766E-17) + t5 * t12);
  foot_jacobian3_vector[0] = (-in2[3] * t58 + in2[4] * t88) - in2[5] * (t5 * t88 - t11 *
    (t62 * 6.123233995736766E-17 - t19));
  foot_jacobian3_vector[1] = (in2[5] * (t5 * t9 - t11 * (t37 * 6.123233995736766E-17 +
    t3)) + in2[3] * t57) - in2[4] * t9;
  foot_jacobian3_vector[2] = (-in2[3] * t46 + in2[4] * t75) - in2[5] * (t5 * t75 - t11 *
    (t53 * 6.123233995736766E-17 + t80_tmp));
  foot_jacobian3_vector[3] = t16;
  foot_jacobian3_vector[4] = t17;
  foot_jacobian3_vector[5] = t6;
  foot_jacobian3_vector[6] = t16;
  foot_jacobian3_vector[7] = t17;
  foot_jacobian3_vector[8] = t6;
      // Map the array to the matrix
  // foot_jacobian3 = Eigen::Map<Eigen::MatrixXf>(foot_jacobian3_vector,3,3);
    foot_jacobian3 <<foot_jacobian3_vector[0], foot_jacobian3_vector[3], foot_jacobian3_vector[6],
                  -foot_jacobian3_vector[1], -foot_jacobian3_vector[4], -foot_jacobian3_vector[7],
                  -foot_jacobian3_vector[2],-foot_jacobian3_vector[5],-foot_jacobian3_vector[8];
}
}