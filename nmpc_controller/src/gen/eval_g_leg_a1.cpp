/* This file was automatically generated by CasADi.
   The CasADi copyright holders make no ownership claim of its contents. */
/* How to prefix internal symbols */
#ifdef CASADI_CODEGEN_PREFIX
  #define CASADI_NAMESPACE_CONCAT(NS, ID) _CASADI_NAMESPACE_CONCAT(NS, ID)
  #define _CASADI_NAMESPACE_CONCAT(NS, ID) NS ## ID
  #define CASADI_PREFIX(ID) CASADI_NAMESPACE_CONCAT(CODEGEN_PREFIX, ID)
#else
  #define CASADI_PREFIX(ID) eval_g_leg_ ## ID
#endif

#include <math.h>

#ifndef casadi_real
#define casadi_real double
#endif

#ifndef casadi_int
#define casadi_int long long int
#endif

/* Add prefix to internal symbols */
#define casadi_f0 CASADI_PREFIX(f0)
#define casadi_s0 CASADI_PREFIX(s0)
#define casadi_s1 CASADI_PREFIX(s1)
#define casadi_s2 CASADI_PREFIX(s2)
#define casadi_sq CASADI_PREFIX(sq)

/* Symbol visibility in DLLs */
#ifndef CASADI_SYMBOL_EXPORT
  #if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
    #if defined(STATIC_LINKED)
      #define CASADI_SYMBOL_EXPORT
    #else
      #define CASADI_SYMBOL_EXPORT __declspec(dllexport)
    #endif
  #elif defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
    #define CASADI_SYMBOL_EXPORT __attribute__ ((visibility ("default")))
  #else
    #define CASADI_SYMBOL_EXPORT
  #endif
#endif

casadi_real casadi_sq(casadi_real x) { return x*x;}

static const casadi_int casadi_s0[40] = {36, 1, 0, 36, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35};
static const casadi_int casadi_s1[17] = {13, 1, 0, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12};
static const casadi_int casadi_s2[32] = {28, 1, 0, 28, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27};

/* eval_g_leg:(w[36],p[13])->(g[28]) */
static int casadi_f0(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_real a0, a1, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a2, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a3, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a4, a40, a41, a42, a43, a44, a45, a46, a47, a48, a49, a5, a50, a51, a6, a7, a8, a9;
  a0=arg[0]? arg[0][24] : 0;
  a1=arg[0]? arg[0][0] : 0;
  a2=arg[0]? arg[0][6] : 0;
  a3=arg[1]? arg[1][0] : 0;
  a4=(a2*a3);
  a1=(a1+a4);
  a4=5.0000000000000000e-001;
  a5=arg[0]? arg[0][12] : 0;
  a6=arg[0]? arg[0][15] : 0;
  a7=(a5+a6);
  a8=arg[0]? arg[0][18] : 0;
  a7=(a7+a8);
  a9=arg[0]? arg[0][21] : 0;
  a7=(a7+a9);
  a10=1.3740000000000000e+001;
  a7=(a7/a10);
  a7=(a4*a7);
  a11=casadi_sq(a3);
  a7=(a7*a11);
  a1=(a1+a7);
  a0=(a0-a1);
  if (res[0]!=0) res[0][0]=a0;
  a0=arg[0]? arg[0][25] : 0;
  a1=arg[0]? arg[0][1] : 0;
  a7=arg[0]? arg[0][7] : 0;
  a12=(a7*a3);
  a1=(a1+a12);
  a12=arg[0]? arg[0][13] : 0;
  a13=arg[0]? arg[0][16] : 0;
  a14=(a12+a13);
  a15=arg[0]? arg[0][19] : 0;
  a14=(a14+a15);
  a16=arg[0]? arg[0][22] : 0;
  a14=(a14+a16);
  a14=(a14/a10);
  a14=(a4*a14);
  a14=(a14*a11);
  a1=(a1+a14);
  a0=(a0-a1);
  if (res[0]!=0) res[0][1]=a0;
  a0=arg[0]? arg[0][26] : 0;
  a1=arg[0]? arg[0][2] : 0;
  a14=arg[0]? arg[0][8] : 0;
  a17=(a14*a3);
  a1=(a1+a17);
  a17=arg[0]? arg[0][14] : 0;
  a18=arg[0]? arg[0][17] : 0;
  a19=(a17+a18);
  a20=arg[0]? arg[0][20] : 0;
  a19=(a19+a20);
  a21=arg[0]? arg[0][23] : 0;
  a19=(a19+a21);
  a19=(a19/a10);
  a22=9.8100000000000005e+000;
  a19=(a19-a22);
  a4=(a4*a19);
  a4=(a4*a11);
  a1=(a1+a4);
  a0=(a0-a1);
  if (res[0]!=0) res[0][2]=a0;
  a0=arg[0]? arg[0][27] : 0;
  a1=arg[0]? arg[0][3] : 0;
  a4=(a0-a1);
  a4=(a4/a3);
  a11=arg[0]? arg[0][9] : 0;
  a19=arg[0]? arg[0][33] : 0;
  a23=(a11+a19);
  a24=2.;
  a23=(a23/a24);
  a25=arg[0]? arg[0][4] : 0;
  a26=arg[0]? arg[0][28] : 0;
  a27=(a25+a26);
  a27=(a27/a24);
  a28=cos(a27);
  a29=(a23*a28);
  a30=arg[0]? arg[0][11] : 0;
  a31=arg[0]? arg[0][35] : 0;
  a32=(a30+a31);
  a32=(a32/a24);
  a1=(a1+a0);
  a1=(a1/a24);
  a0=cos(a1);
  a33=(a32*a0);
  a27=sin(a27);
  a33=(a33*a27);
  a29=(a29+a33);
  a33=arg[0]? arg[0][10] : 0;
  a34=arg[0]? arg[0][34] : 0;
  a35=(a33+a34);
  a35=(a35/a24);
  a1=sin(a1);
  a36=(a35*a1);
  a36=(a36*a27);
  a29=(a29+a36);
  a29=(a29/a28);
  a4=(a4-a29);
  if (res[0]!=0) res[0][3]=a4;
  a26=(a26-a25);
  a26=(a26/a3);
  a25=(a35*a0);
  a4=(a32*a1);
  a25=(a25-a4);
  a26=(a26-a25);
  if (res[0]!=0) res[0][4]=a26;
  a26=arg[0]? arg[0][29] : 0;
  a25=arg[0]? arg[0][5] : 0;
  a4=(a26-a25);
  a4=(a4/a3);
  a29=(a32*a0);
  a36=(a35*a1);
  a29=(a29+a36);
  a29=(a29/a28);
  a4=(a4-a29);
  if (res[0]!=0) res[0][5]=a4;
  a4=arg[0]? arg[0][30] : 0;
  a29=(a5+a6);
  a29=(a29+a8);
  a29=(a29+a9);
  a29=(a29/a10);
  a29=(a29*a3);
  a2=(a2+a29);
  a4=(a4-a2);
  if (res[0]!=0) res[0][6]=a4;
  a4=arg[0]? arg[0][31] : 0;
  a2=(a12+a13);
  a2=(a2+a15);
  a2=(a2+a16);
  a2=(a2/a10);
  a2=(a2*a3);
  a7=(a7+a2);
  a4=(a4-a7);
  if (res[0]!=0) res[0][7]=a4;
  a4=arg[0]? arg[0][32] : 0;
  a7=(a17+a18);
  a7=(a7+a20);
  a7=(a7+a21);
  a7=(a7/a10);
  a7=(a7-a22);
  a7=(a7*a3);
  a14=(a14+a7);
  a4=(a4-a14);
  if (res[0]!=0) res[0][8]=a4;
  a4=3.2950960000000001e-002;
  a19=(a19-a11);
  a4=(a4*a19);
  a11=-3.6600000000000002e-005;
  a34=(a34-a33);
  a33=(a11*a34);
  a4=(a4+a33);
  a33=-6.1099999999999994e-005;
  a31=(a31-a30);
  a30=(a33*a31);
  a4=(a4+a30);
  a4=(a4/a3);
  a30=3.6600000000000002e-005;
  a14=(a30*a23);
  a7=2.8997103499999999e-001;
  a22=(a7*a35);
  a14=(a14-a22);
  a22=2.7500000000000001e-005;
  a10=(a22*a32);
  a14=(a14+a10);
  a14=(a32*a14);
  a10=6.1099999999999994e-005;
  a2=(a10*a23);
  a29=(a22*a35);
  a2=(a2+a29);
  a29=3.1492299499999998e-001;
  a36=(a29*a32);
  a2=(a2-a36);
  a2=(a35*a2);
  a14=(a14-a2);
  a4=(a4+a14);
  a14=arg[1]? arg[1][1] : 0;
  a2=(a14*a27);
  a36=arg[1]? arg[1][3] : 0;
  a37=(a36*a28);
  a25=(a25+a26);
  a25=(a25/a24);
  a24=cos(a25);
  a37=(a37*a24);
  a2=(a2+a37);
  a2=(a2*a12);
  a37=arg[1]? arg[1][2] : 0;
  a26=(a37*a27);
  a38=(a36*a28);
  a25=sin(a25);
  a38=(a38*a25);
  a26=(a26+a38);
  a26=(a26*a5);
  a2=(a2-a26);
  a26=(a37*a24);
  a38=(a14*a25);
  a26=(a26-a38);
  a26=(a28*a26);
  a26=(a26*a17);
  a2=(a2-a26);
  a26=arg[1]? arg[1][5] : 0;
  a38=(a26*a27);
  a39=arg[1]? arg[1][6] : 0;
  a40=(a39*a28);
  a40=(a40*a25);
  a38=(a38+a40);
  a38=(a38*a6);
  a2=(a2-a38);
  a38=arg[1]? arg[1][4] : 0;
  a40=(a38*a27);
  a41=(a39*a28);
  a41=(a41*a24);
  a40=(a40+a41);
  a40=(a40*a13);
  a2=(a2+a40);
  a40=(a26*a24);
  a41=(a38*a25);
  a40=(a40-a41);
  a40=(a28*a40);
  a40=(a40*a18);
  a2=(a2-a40);
  a40=arg[1]? arg[1][8] : 0;
  a41=(a40*a27);
  a42=arg[1]? arg[1][9] : 0;
  a43=(a42*a28);
  a43=(a43*a25);
  a41=(a41+a43);
  a41=(a41*a8);
  a2=(a2-a41);
  a41=arg[1]? arg[1][7] : 0;
  a43=(a41*a27);
  a44=(a42*a28);
  a44=(a44*a24);
  a43=(a43+a44);
  a43=(a43*a15);
  a2=(a2+a43);
  a43=(a40*a24);
  a44=(a41*a25);
  a43=(a43-a44);
  a43=(a28*a43);
  a43=(a43*a20);
  a2=(a2-a43);
  a43=arg[1]? arg[1][11] : 0;
  a44=(a43*a27);
  a45=arg[1]? arg[1][12] : 0;
  a46=(a45*a28);
  a46=(a46*a25);
  a44=(a44+a46);
  a44=(a44*a9);
  a2=(a2-a44);
  a44=arg[1]? arg[1][10] : 0;
  a46=(a44*a27);
  a47=(a45*a28);
  a47=(a47*a24);
  a46=(a46+a47);
  a46=(a46*a16);
  a2=(a2+a46);
  a46=(a43*a24);
  a47=(a44*a25);
  a46=(a46-a47);
  a46=(a28*a46);
  a46=(a46*a21);
  a2=(a2-a46);
  a4=(a4-a2);
  if (res[0]!=0) res[0][9]=a4;
  a11=(a11*a0);
  a4=(a10*a1);
  a11=(a11+a4);
  a11=(a11*a19);
  a4=(a7*a0);
  a2=(a22*a1);
  a4=(a4+a2);
  a4=(a4*a34);
  a11=(a11+a4);
  a4=-2.7500000000000001e-005;
  a4=(a4*a0);
  a2=(a29*a1);
  a4=(a4-a2);
  a4=(a4*a31);
  a11=(a11+a4);
  a11=(a11/a3);
  a4=casadi_sq(a23);
  a2=(a0*a4);
  a2=(a10*a2);
  a46=casadi_sq(a32);
  a47=(a0*a46);
  a47=(a10*a47);
  a2=(a2-a47);
  a47=(a1*a4);
  a47=(a30*a47);
  a2=(a2+a47);
  a47=casadi_sq(a35);
  a48=(a1*a47);
  a48=(a30*a48);
  a2=(a2-a48);
  a48=(a23*a35);
  a48=(a48*a0);
  a48=(a22*a48);
  a49=2.8197203500000001e-001;
  a50=(a23*a32);
  a50=(a50*a0);
  a50=(a49*a50);
  a48=(a48-a50);
  a50=(a35*a32);
  a50=(a50*a0);
  a50=(a30*a50);
  a48=(a48-a50);
  a50=2.5702007500000001e-001;
  a51=(a23*a35);
  a51=(a51*a1);
  a51=(a50*a51);
  a48=(a48-a51);
  a2=(a2+a48);
  a48=(a23*a32);
  a48=(a48*a1);
  a48=(a22*a48);
  a51=(a35*a32);
  a51=(a51*a1);
  a51=(a10*a51);
  a48=(a48-a51);
  a2=(a2+a48);
  a11=(a11+a2);
  a2=(a14*a24);
  a48=(a37*a25);
  a2=(a2+a48);
  a2=(a2*a17);
  a48=(a36*a24);
  a48=(a48*a5);
  a36=(a36*a25);
  a36=(a36*a12);
  a48=(a48+a36);
  a2=(a2-a48);
  a48=(a39*a24);
  a48=(a48*a6);
  a2=(a2-a48);
  a39=(a39*a25);
  a39=(a39*a13);
  a2=(a2-a39);
  a39=(a38*a24);
  a48=(a26*a25);
  a39=(a39+a48);
  a39=(a39*a18);
  a2=(a2+a39);
  a39=(a42*a24);
  a39=(a39*a8);
  a2=(a2-a39);
  a42=(a42*a25);
  a42=(a42*a15);
  a2=(a2-a42);
  a42=(a41*a24);
  a39=(a40*a25);
  a42=(a42+a39);
  a42=(a42*a20);
  a2=(a2+a42);
  a42=(a45*a24);
  a42=(a42*a9);
  a2=(a2-a42);
  a45=(a45*a25);
  a45=(a45*a16);
  a2=(a2-a45);
  a24=(a44*a24);
  a25=(a43*a25);
  a24=(a24+a25);
  a24=(a24*a21);
  a2=(a2+a24);
  a11=(a11-a2);
  if (res[0]!=0) res[0][10]=a11;
  a11=-3.2950960000000001e-002;
  a11=(a11*a27);
  a2=(a0*a28);
  a2=(a10*a2);
  a11=(a11-a2);
  a2=(a28*a1);
  a2=(a30*a2);
  a11=(a11-a2);
  a11=(a11*a19);
  a19=(a30*a27);
  a2=(a0*a28);
  a2=(a22*a2);
  a19=(a19-a2);
  a2=(a28*a1);
  a7=(a7*a2);
  a19=(a19+a7);
  a19=(a19*a34);
  a11=(a11+a19);
  a19=(a10*a27);
  a34=(a0*a28);
  a29=(a29*a34);
  a19=(a19+a29);
  a29=(a28*a1);
  a29=(a22*a29);
  a19=(a19-a29);
  a19=(a19*a31);
  a11=(a11+a19);
  a11=(a11/a3);
  a3=(a27*a47);
  a3=(a22*a3);
  a19=(a27*a46);
  a19=(a22*a19);
  a3=(a3-a19);
  a19=(a23*a35);
  a19=(a19*a27);
  a19=(a10*a19);
  a3=(a3+a19);
  a19=(a23*a32);
  a19=(a19*a27);
  a19=(a30*a19);
  a3=(a3-a19);
  a19=-2.4951959999999999e-002;
  a31=(a35*a32);
  a31=(a31*a27);
  a19=(a19*a31);
  a31=(a0*a28);
  a31=(a31*a4);
  a31=(a30*a31);
  a19=(a19-a31);
  a31=(a0*a28);
  a31=(a31*a47);
  a31=(a30*a31);
  a19=(a19+a31);
  a31=(a28*a1);
  a31=(a31*a4);
  a31=(a10*a31);
  a19=(a19+a31);
  a3=(a3+a19);
  a19=(a28*a1);
  a19=(a19*a46);
  a33=(a33*a19);
  a19=(a23*a35);
  a19=(a19*a0);
  a19=(a19*a28);
  a50=(a50*a19);
  a33=(a33+a50);
  a50=(a23*a32);
  a50=(a50*a0);
  a50=(a50*a28);
  a50=(a22*a50);
  a33=(a33-a50);
  a50=(a35*a32);
  a50=(a50*a0);
  a50=(a50*a28);
  a10=(a10*a50);
  a33=(a33+a10);
  a3=(a3+a33);
  a33=(a23*a35);
  a33=(a33*a28);
  a33=(a33*a1);
  a22=(a22*a33);
  a23=(a23*a32);
  a23=(a23*a28);
  a23=(a23*a1);
  a49=(a49*a23);
  a22=(a22-a49);
  a35=(a35*a32);
  a35=(a35*a28);
  a35=(a35*a1);
  a30=(a30*a35);
  a22=(a22-a30);
  a3=(a3+a22);
  a11=(a11+a3);
  a37=(a37*a5);
  a14=(a14*a12);
  a37=(a37-a14);
  a26=(a26*a6);
  a37=(a37+a26);
  a38=(a38*a13);
  a37=(a37-a38);
  a40=(a40*a8);
  a37=(a37+a40);
  a41=(a41*a15);
  a37=(a37-a41);
  a43=(a43*a9);
  a37=(a37+a43);
  a44=(a44*a16);
  a37=(a37-a44);
  a11=(a11-a37);
  if (res[0]!=0) res[0][11]=a11;
  a11=-5.0000000000000000e-001;
  a37=(a11*a17);
  a37=(a5+a37);
  if (res[0]!=0) res[0][12]=a37;
  a37=(a11*a17);
  a37=(a37-a5);
  if (res[0]!=0) res[0][13]=a37;
  a37=(a11*a17);
  a37=(a12+a37);
  if (res[0]!=0) res[0][14]=a37;
  a17=(a11*a17);
  a17=(a17-a12);
  if (res[0]!=0) res[0][15]=a17;
  a17=(a11*a18);
  a17=(a6+a17);
  if (res[0]!=0) res[0][16]=a17;
  a17=(a11*a18);
  a17=(a17-a6);
  if (res[0]!=0) res[0][17]=a17;
  a17=(a11*a18);
  a17=(a13+a17);
  if (res[0]!=0) res[0][18]=a17;
  a18=(a11*a18);
  a18=(a18-a13);
  if (res[0]!=0) res[0][19]=a18;
  a18=(a11*a20);
  a18=(a8+a18);
  if (res[0]!=0) res[0][20]=a18;
  a18=(a11*a20);
  a18=(a18-a8);
  if (res[0]!=0) res[0][21]=a18;
  a18=(a11*a20);
  a18=(a15+a18);
  if (res[0]!=0) res[0][22]=a18;
  a20=(a11*a20);
  a20=(a20-a15);
  if (res[0]!=0) res[0][23]=a20;
  a20=(a11*a21);
  a20=(a9+a20);
  if (res[0]!=0) res[0][24]=a20;
  a20=(a11*a21);
  a20=(a20-a9);
  if (res[0]!=0) res[0][25]=a20;
  a20=(a11*a21);
  a20=(a16+a20);
  if (res[0]!=0) res[0][26]=a20;
  a11=(a11*a21);
  a11=(a11-a16);
  if (res[0]!=0) res[0][27]=a11;
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT int eval_g_leg(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem){
  return casadi_f0(arg, res, iw, w, mem);
}

extern "C" CASADI_SYMBOL_EXPORT int eval_g_leg_alloc_mem(void) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT int eval_g_leg_init_mem(int mem) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT void eval_g_leg_free_mem(int mem) {
}

extern "C" CASADI_SYMBOL_EXPORT int eval_g_leg_checkout(void) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT void eval_g_leg_release(int mem) {
}

extern "C" CASADI_SYMBOL_EXPORT void eval_g_leg_incref(void) {
}

extern "C" CASADI_SYMBOL_EXPORT void eval_g_leg_decref(void) {
}

extern "C" CASADI_SYMBOL_EXPORT casadi_int eval_g_leg_n_in(void) { return 2;}

extern "C" CASADI_SYMBOL_EXPORT casadi_int eval_g_leg_n_out(void) { return 1;}

extern "C" CASADI_SYMBOL_EXPORT casadi_real eval_g_leg_default_in(casadi_int i){
  switch (i) {
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const char* eval_g_leg_name_in(casadi_int i){
  switch (i) {
    case 0: return "w";
    case 1: return "p";
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const char* eval_g_leg_name_out(casadi_int i){
  switch (i) {
    case 0: return "g";
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const casadi_int* eval_g_leg_sparsity_in(casadi_int i) {
  switch (i) {
    case 0: return casadi_s0;
    case 1: return casadi_s1;
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const casadi_int* eval_g_leg_sparsity_out(casadi_int i) {
  switch (i) {
    case 0: return casadi_s2;
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT int eval_g_leg_work(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w) {
  if (sz_arg) *sz_arg = 2;
  if (sz_res) *sz_res = 1;
  if (sz_iw) *sz_iw = 0;
  if (sz_w) *sz_w = 0;
  return 0;
}


