/* This file was automatically generated by CasADi.
   The CasADi copyright holders make no ownership claim of its contents. */
/* How to prefix internal symbols */
#ifdef CASADI_CODEGEN_PREFIX
  #define CASADI_NAMESPACE_CONCAT(NS, ID) _CASADI_NAMESPACE_CONCAT(NS, ID)
  #define _CASADI_NAMESPACE_CONCAT(NS, ID) NS ## ID
  #define CASADI_PREFIX(ID) CASADI_NAMESPACE_CONCAT(CODEGEN_PREFIX, ID)
#else
  #define CASADI_PREFIX(ID) eval_hess_g_leg_simple_ ## ID
#endif

#include <math.h>

#ifndef casadi_real
#define casadi_real double
#endif

#ifndef casadi_int
#define casadi_int long long int
#endif

/* Add prefix to internal symbols */
#define casadi_f0 CASADI_PREFIX(f0)
#define casadi_s0 CASADI_PREFIX(s0)
#define casadi_s1 CASADI_PREFIX(s1)
#define casadi_s2 CASADI_PREFIX(s2)
#define casadi_s3 CASADI_PREFIX(s3)

/* Symbol visibility in DLLs */
#ifndef CASADI_SYMBOL_EXPORT
  #if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
    #if defined(STATIC_LINKED)
      #define CASADI_SYMBOL_EXPORT
    #else
      #define CASADI_SYMBOL_EXPORT __declspec(dllexport)
    #endif
  #elif defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
    #define CASADI_SYMBOL_EXPORT __attribute__ ((visibility ("default")))
  #else
    #define CASADI_SYMBOL_EXPORT
  #endif
#endif

static const casadi_int casadi_s0[100] = {96, 1, 0, 96, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95};
static const casadi_int casadi_s1[60] = {56, 1, 0, 56, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55};
static const casadi_int casadi_s2[34] = {30, 1, 0, 30, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29};
static const casadi_int casadi_s3[172] = {96, 96, 0, 10, 20, 30, 37, 57, 70, 70, 70, 70, 72, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 4, 5, 37, 38, 40, 41, 43, 44, 46, 47, 4, 5, 36, 38, 39, 41, 42, 44, 45, 47, 4, 5, 36, 37, 39, 40, 42, 43, 45, 46, 3, 4, 9, 10, 11, 70, 71, 4, 5, 9, 10, 11, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 69, 70, 71, 5, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 10, 11, 11};

/* eval_hess_g_leg_simple:(w[96],lambda[56],p[30])->(hess_g[96x96,73nz]) */
static int casadi_f0(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_real a0, a1, a10, a100, a101, a102, a103, a104, a105, a106, a107, a108, a109, a11, a110, a111, a112, a113, a114, a115, a116, a117, a12, a13, a14, a15, a16, a17, a18, a19, a2, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a3, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a4, a40, a41, a42, a43, a44, a45, a46, a47, a48, a49, a5, a50, a51, a52, a53, a54, a55, a56, a57, a58, a59, a6, a60, a61, a62, a63, a64, a65, a66, a67, a68, a69, a7, a70, a71, a72, a73, a74, a75, a76, a77, a78, a79, a8, a80, a81, a82, a83, a84, a85, a86, a87, a88, a89, a9, a90, a91, a92, a93, a94, a95, a96, a97, a98, a99;
  a0=arg[0]? arg[0][46] : 0;
  a1=arg[2]? arg[2][0] : 0;
  a2=arg[1]? arg[1][9] : 0;
  a2=(a1*a2);
  a3=(a0*a2);
  a4=arg[0]? arg[0][4] : 0;
  a5=cos(a4);
  a6=(a3*a5);
  a7=arg[0]? arg[0][43] : 0;
  a8=(a7*a2);
  a9=(a8*a5);
  a6=(a6+a9);
  a9=arg[0]? arg[0][40] : 0;
  a10=(a9*a2);
  a11=(a10*a5);
  a6=(a6+a11);
  a11=arg[0]? arg[0][5] : 0;
  a12=sin(a11);
  a13=arg[0]? arg[0][47] : 0;
  a14=(a13*a2);
  a15=sin(a4);
  a16=(a14*a15);
  a17=arg[0]? arg[0][44] : 0;
  a18=(a17*a2);
  a19=(a18*a15);
  a20=(a16+a19);
  a21=arg[0]? arg[0][41] : 0;
  a22=(a21*a2);
  a23=(a22*a15);
  a20=(a20+a23);
  a24=arg[0]? arg[0][38] : 0;
  a25=(a24*a2);
  a26=(a25*a15);
  a20=(a20+a26);
  a27=(a12*a20);
  a6=(a6-a27);
  a27=arg[0]? arg[0][37] : 0;
  a28=(a27*a2);
  a29=(a28*a5);
  a6=(a6+a29);
  a6=(-a6);
  if (res[0]!=0) res[0][0]=a6;
  a6=cos(a4);
  a29=(a6*a14);
  a30=(a6*a18);
  a31=(a29+a30);
  a32=(a6*a22);
  a31=(a31+a32);
  a33=(a6*a25);
  a31=(a31+a33);
  a34=cos(a11);
  a35=(a31*a34);
  a36=arg[1]? arg[1][10] : 0;
  a37=(a1*a36);
  a13=(a13*a37);
  a17=(a17*a37);
  a38=(a13+a17);
  a21=(a21*a37);
  a38=(a38+a21);
  a24=(a24*a37);
  a38=(a38+a24);
  a39=sin(a11);
  a40=(a38*a39);
  a35=(a35-a40);
  a35=(-a35);
  if (res[0]!=0) res[0][1]=a35;
  a35=arg[1]? arg[1][11] : 0;
  a40=(a1*a35);
  a41=sin(a4);
  a42=(a2*a41);
  a42=(a40-a42);
  if (res[0]!=0) res[0][2]=a42;
  a42=(a6*a12);
  a42=(a2*a42);
  a43=cos(a11);
  a44=(a37*a43);
  a42=(a42+a44);
  a42=(-a42);
  if (res[0]!=0) res[0][3]=a42;
  a42=(a2*a41);
  a42=(a40-a42);
  if (res[0]!=0) res[0][4]=a42;
  a42=(a6*a12);
  a42=(a2*a42);
  a44=(a37*a43);
  a42=(a42+a44);
  a42=(-a42);
  if (res[0]!=0) res[0][5]=a42;
  a42=(a2*a41);
  a42=(a40-a42);
  if (res[0]!=0) res[0][6]=a42;
  a42=(a6*a12);
  a42=(a2*a42);
  a44=(a37*a43);
  a42=(a42+a44);
  a42=(-a42);
  if (res[0]!=0) res[0][7]=a42;
  a42=(a2*a41);
  a42=(a40-a42);
  if (res[0]!=0) res[0][8]=a42;
  a42=(a6*a12);
  a42=(a2*a42);
  a44=(a37*a43);
  a42=(a42+a44);
  a42=(-a42);
  if (res[0]!=0) res[0][9]=a42;
  a42=arg[0]? arg[0][45] : 0;
  a44=(a42*a2);
  a45=(a44*a5);
  a46=arg[0]? arg[0][42] : 0;
  a47=(a46*a2);
  a48=(a47*a5);
  a45=(a45+a48);
  a48=arg[0]? arg[0][39] : 0;
  a49=(a48*a2);
  a50=(a49*a5);
  a45=(a45+a50);
  a50=(a16+a19);
  a50=(a50+a23);
  a50=(a50+a26);
  a51=(a43*a50);
  a45=(a45-a51);
  a51=arg[0]? arg[0][36] : 0;
  a52=(a51*a2);
  a53=(a52*a5);
  a45=(a45+a53);
  if (res[0]!=0) res[0][10]=a45;
  a45=(a13+a17);
  a45=(a45+a21);
  a45=(a45+a24);
  a53=(a45*a34);
  a54=(a29+a30);
  a54=(a54+a32);
  a54=(a54+a33);
  a55=(a54*a39);
  a53=(a53+a55);
  a53=(-a53);
  if (res[0]!=0) res[0][11]=a53;
  a53=(a2*a41);
  a53=(a53-a40);
  if (res[0]!=0) res[0][12]=a53;
  a53=(a6*a43);
  a53=(a2*a53);
  a55=(a37*a12);
  a53=(a53-a55);
  if (res[0]!=0) res[0][13]=a53;
  a53=(a2*a41);
  a53=(a53-a40);
  if (res[0]!=0) res[0][14]=a53;
  a53=(a6*a43);
  a53=(a2*a53);
  a55=(a37*a12);
  a53=(a53-a55);
  if (res[0]!=0) res[0][15]=a53;
  a53=(a2*a41);
  a53=(a53-a40);
  if (res[0]!=0) res[0][16]=a53;
  a53=(a6*a43);
  a53=(a2*a53);
  a55=(a37*a12);
  a53=(a53-a55);
  if (res[0]!=0) res[0][17]=a53;
  a53=(a2*a41);
  a53=(a53-a40);
  if (res[0]!=0) res[0][18]=a53;
  a53=(a6*a43);
  a53=(a2*a53);
  a55=(a37*a12);
  a53=(a53-a55);
  if (res[0]!=0) res[0][19]=a53;
  a53=(a12*a15);
  a55=(a44*a53);
  a56=(a43*a15);
  a57=(a3*a56);
  a55=(a55-a57);
  a57=(a12*a15);
  a58=(a47*a57);
  a59=(a43*a15);
  a60=(a8*a59);
  a58=(a58-a60);
  a55=(a55+a58);
  a58=(a12*a15);
  a60=(a49*a58);
  a61=(a43*a15);
  a62=(a10*a61);
  a60=(a60-a62);
  a55=(a55+a60);
  a60=(a12*a15);
  a62=(a52*a60);
  a63=(a43*a15);
  a64=(a28*a63);
  a62=(a62-a64);
  a55=(a55+a62);
  a55=(-a55);
  if (res[0]!=0) res[0][20]=a55;
  a55=(a6*a39);
  a62=(a3*a55);
  a0=(a0*a37);
  a64=(a0*a34);
  a42=(a42*a37);
  a65=(a42*a39);
  a64=(a64-a65);
  a62=(a62+a64);
  a64=(a6*a34);
  a65=(a44*a64);
  a62=(a62+a65);
  a65=(a6*a39);
  a66=(a8*a65);
  a7=(a7*a37);
  a67=(a7*a34);
  a46=(a46*a37);
  a68=(a46*a39);
  a67=(a67-a68);
  a66=(a66+a67);
  a67=(a6*a34);
  a68=(a47*a67);
  a66=(a66+a68);
  a62=(a62+a66);
  a66=(a6*a39);
  a68=(a10*a66);
  a9=(a9*a37);
  a69=(a9*a34);
  a48=(a48*a37);
  a70=(a48*a39);
  a69=(a69-a70);
  a68=(a68+a69);
  a69=(a6*a34);
  a70=(a49*a69);
  a68=(a68+a70);
  a62=(a62+a68);
  a68=(a6*a39);
  a70=(a28*a68);
  a27=(a27*a37);
  a71=(a27*a34);
  a51=(a51*a37);
  a72=(a51*a39);
  a71=(a71-a72);
  a70=(a70+a71);
  a71=(a6*a34);
  a72=(a52*a71);
  a70=(a70+a72);
  a62=(a62+a70);
  if (res[0]!=0) res[0][21]=a62;
  a62=(a37*a43);
  a70=(a6*a12);
  a70=(a2*a70);
  a62=(a62+a70);
  if (res[0]!=0) res[0][22]=a62;
  a62=(a37*a12);
  a70=(a6*a43);
  a70=(a2*a70);
  a62=(a62-a70);
  if (res[0]!=0) res[0][23]=a62;
  a62=(a37*a43);
  a70=(a6*a12);
  a70=(a2*a70);
  a62=(a62+a70);
  if (res[0]!=0) res[0][24]=a62;
  a62=(a37*a12);
  a70=(a6*a43);
  a70=(a2*a70);
  a62=(a62-a70);
  if (res[0]!=0) res[0][25]=a62;
  a62=(a37*a43);
  a70=(a6*a12);
  a70=(a2*a70);
  a62=(a62+a70);
  if (res[0]!=0) res[0][26]=a62;
  a62=(a37*a12);
  a70=(a6*a43);
  a70=(a2*a70);
  a62=(a62-a70);
  if (res[0]!=0) res[0][27]=a62;
  a62=(a37*a43);
  a70=(a6*a12);
  a70=(a2*a70);
  a62=(a62+a70);
  if (res[0]!=0) res[0][28]=a62;
  a62=(a37*a12);
  a70=(a6*a43);
  a70=(a2*a70);
  a62=(a62-a70);
  if (res[0]!=0) res[0][29]=a62;
  a62=4.3125046780173909e-01;
  a70=arg[0]? arg[0][70] : 0;
  a72=arg[0]? arg[0][10] : 0;
  a70=(a70-a72);
  a73=(a70*a35);
  a73=(a62*a73);
  a74=(a6*a73);
  a75=arg[0]? arg[0][9] : 0;
  a76=arg[0]? arg[0][11] : 0;
  a77=(a75*a76);
  a78=(a77*a6);
  a79=3.6700698954086952e-01;
  a79=(a79*a40);
  a78=(a78*a79);
  a74=(a74-a78);
  a78=24358218631252112.;
  a80=-1.3877787807814460e-17;
  a80=(a80*a37);
  a81=(a75*a80);
  a82=(a78*a81);
  a83=(a72*a82);
  a74=(a74+a83);
  a83=-4.6021926780173911e-01;
  a84=arg[0]? arg[0][71] : 0;
  a84=(a84-a76);
  a85=(a84*a36);
  a85=(a83*a85);
  a74=(a74+a85);
  a85=arg[1]? arg[1][5] : 0;
  a85=(a1*a85);
  a86=(a85/a6);
  a87=(a72*a86);
  a74=(a74-a87);
  a87=arg[1]? arg[1][4] : 0;
  a87=(a1*a87);
  a88=(a76*a87);
  a74=(a74+a88);
  a88=arg[1]? arg[1][3] : 0;
  a1=(a1*a88);
  a88=(a1/a6);
  a89=(a41*a88);
  a90=(a72*a89);
  a74=(a74-a90);
  a90=arg[0]? arg[0][3] : 0;
  a91=sin(a90);
  a74=(a74*a91);
  a91=(a75*a72);
  a92=3.3803818954086950e-01;
  a92=(a92*a40);
  a93=(a6*a92);
  a94=(a91*a93);
  a95=4.6021926780173911e-01;
  a84=(a84*a35);
  a84=(a95*a84);
  a96=(a6*a84);
  a94=(a94+a96);
  a96=26445640661418040.;
  a81=(a96*a81);
  a97=(a76*a81);
  a94=(a94+a97);
  a70=(a70*a36);
  a70=(a62*a70);
  a94=(a94+a70);
  a70=(a76*a86);
  a94=(a94-a70);
  a70=(a72*a87);
  a94=(a94-a70);
  a70=(a41*a88);
  a97=(a76*a70);
  a94=(a94-a97);
  a97=cos(a90);
  a94=(a94*a97);
  a74=(a74+a94);
  a74=(-a74);
  if (res[0]!=0) res[0][30]=a74;
  a74=cos(a90);
  a94=(a77*a15);
  a94=(a79*a94);
  a97=(a73*a15);
  a94=(a94-a97);
  a97=(a86/a6);
  a97=(a97*a15);
  a98=(a72*a97);
  a94=(a94-a98);
  a98=(a88/a6);
  a98=(a98*a15);
  a99=(a41*a98);
  a99=(a1+a99);
  a100=(a72*a99);
  a94=(a94-a100);
  a94=(a74*a94);
  a100=sin(a90);
  a101=(a92*a15);
  a102=(a91*a101);
  a103=(a84*a15);
  a102=(a102+a103);
  a103=(a76*a97);
  a102=(a102+a103);
  a103=(a41*a98);
  a103=(a1+a103);
  a104=(a76*a103);
  a102=(a102+a104);
  a102=(a100*a102);
  a94=(a94+a102);
  if (res[0]!=0) res[0][31]=a94;
  a94=cos(a90);
  a102=(a72*a94);
  a102=(a78*a102);
  a104=sin(a90);
  a105=(a76*a104);
  a105=(a96*a105);
  a102=(a102-a105);
  a102=(a80*a102);
  a105=(a93*a104);
  a105=(a72*a105);
  a106=(a79*a94);
  a106=(a6*a106);
  a106=(a76*a106);
  a105=(a105+a106);
  a102=(a102-a105);
  if (res[0]!=0) res[0][32]=a102;
  a102=(a62*a35);
  a102=(a6*a102);
  a82=(a82-a102);
  a82=(a82-a86);
  a82=(a82-a89);
  a82=(a74*a82);
  a89=(a93*a75);
  a102=(a62*a36);
  a89=(a89-a102);
  a89=(a89-a87);
  a89=(a100*a89);
  a82=(a82-a89);
  if (res[0]!=0) res[0][33]=a82;
  a82=(a6*a75);
  a82=(a79*a82);
  a89=(a83*a36);
  a82=(a82+a89);
  a87=(a87-a82);
  a74=(a74*a87);
  a87=(a95*a35);
  a87=(a6*a87);
  a81=(a81-a87);
  a81=(a81-a86);
  a81=(a81-a70);
  a100=(a100*a81);
  a74=(a74-a100);
  if (res[0]!=0) res[0][34]=a74;
  a74=(a6*a94);
  a74=(a62*a74);
  a74=(a35*a74);
  a100=(a62*a104);
  a100=(a36*a100);
  a74=(a74-a100);
  if (res[0]!=0) res[0][35]=a74;
  a83=(a83*a94);
  a36=(a36*a83);
  a104=(a6*a104);
  a104=(a95*a104);
  a104=(a35*a104);
  a36=(a36-a104);
  if (res[0]!=0) res[0][36]=a36;
  a36=(a72*a76);
  a104=-2.8968800000000020e-02;
  a104=(a104*a40);
  a36=(a36*a104);
  a40=-9.3212278260869572e-02;
  a83=arg[0]? arg[0][69] : 0;
  a83=(a83-a75);
  a83=(a83*a35);
  a83=(a40*a83);
  a36=(a36+a83);
  a83=arg[2]? arg[2][11] : 0;
  a94=arg[0]? arg[0][0] : 0;
  a74=(a83-a94);
  a100=(a74*a3);
  a36=(a36+a100);
  a100=arg[2]? arg[2][12] : 0;
  a81=arg[0]? arg[0][1] : 0;
  a70=(a100-a81);
  a86=(a70*a44);
  a36=(a36-a86);
  a86=arg[2]? arg[2][8] : 0;
  a87=(a86-a94);
  a82=(a87*a8);
  a36=(a36+a82);
  a82=arg[2]? arg[2][9] : 0;
  a89=(a82-a81);
  a102=(a89*a47);
  a36=(a36-a102);
  a102=arg[2]? arg[2][5] : 0;
  a105=(a102-a94);
  a106=(a105*a10);
  a36=(a36+a106);
  a106=arg[2]? arg[2][6] : 0;
  a107=(a106-a81);
  a108=(a107*a49);
  a36=(a36-a108);
  a108=arg[2]? arg[2][2] : 0;
  a109=(a108-a94);
  a110=(a109*a28);
  a36=(a36+a110);
  a110=arg[2]? arg[2][3] : 0;
  a111=(a110-a81);
  a112=(a111*a52);
  a36=(a36-a112);
  a112=sin(a90);
  a113=(a72*a112);
  a114=(a113*a88);
  a36=(a36-a114);
  a90=cos(a90);
  a114=(a76*a90);
  a115=(a114*a88);
  a36=(a36-a115);
  a115=sin(a4);
  a36=(a36*a115);
  a115=cos(a4);
  a116=(a113*a98);
  a117=(a114*a98);
  a116=(a116+a117);
  a115=(a115*a116);
  a36=(a36+a115);
  a91=(a91*a90);
  a91=(a91*a92);
  a79=(a112*a79);
  a77=(a77*a79);
  a91=(a91-a77);
  a84=(a90*a84);
  a91=(a91+a84);
  a73=(a112*a73);
  a91=(a91+a73);
  a73=(a81*a43);
  a84=(a94*a12);
  a77=(a73-a84);
  a92=(a100*a43);
  a77=(a77-a92);
  a92=(a83*a12);
  a77=(a77+a92);
  a14=(a77*a14);
  a91=(a91+a14);
  a14=arg[2]? arg[2][13] : 0;
  a92=arg[0]? arg[0][2] : 0;
  a14=(a14-a92);
  a3=(a14*a3);
  a115=(a43*a3);
  a91=(a91+a115);
  a44=(a14*a44);
  a115=(a12*a44);
  a91=(a91-a115);
  a115=(a73-a84);
  a116=(a82*a43);
  a115=(a115-a116);
  a116=(a86*a12);
  a115=(a115+a116);
  a18=(a115*a18);
  a91=(a91+a18);
  a18=arg[2]? arg[2][10] : 0;
  a18=(a18-a92);
  a8=(a18*a8);
  a116=(a43*a8);
  a91=(a91+a116);
  a47=(a18*a47);
  a116=(a12*a47);
  a91=(a91-a116);
  a116=(a73-a84);
  a117=(a106*a43);
  a116=(a116-a117);
  a117=(a102*a12);
  a116=(a116+a117);
  a22=(a116*a22);
  a91=(a91+a22);
  a22=arg[2]? arg[2][7] : 0;
  a22=(a22-a92);
  a10=(a22*a10);
  a117=(a43*a10);
  a91=(a91+a117);
  a49=(a22*a49);
  a117=(a12*a49);
  a91=(a91-a117);
  a73=(a73-a84);
  a84=(a110*a43);
  a73=(a73-a84);
  a84=(a108*a12);
  a73=(a73+a84);
  a25=(a73*a25);
  a91=(a91+a25);
  a25=arg[2]? arg[2][4] : 0;
  a25=(a25-a92);
  a28=(a25*a28);
  a43=(a43*a28);
  a91=(a91+a43);
  a52=(a25*a52);
  a12=(a12*a52);
  a91=(a91-a12);
  a12=(a76*a90);
  a43=(a72*a112);
  a12=(a12+a43);
  a12=(a12/a6);
  a43=(a12/a6);
  a92=(a43*a85);
  a91=(a91+a92);
  a92=(a75*a6);
  a84=(a114*a41);
  a92=(a92+a84);
  a84=(a113*a41);
  a92=(a92+a84);
  a92=(a92/a6);
  a84=(a92/a6);
  a117=(a84*a1);
  a91=(a91+a117);
  a88=(a75*a88);
  a91=(a91-a88);
  a88=cos(a4);
  a91=(a91*a88);
  a4=sin(a4);
  a12=(a12/a6);
  a12=(a12*a15);
  a12=(a12/a6);
  a43=(a43/a6);
  a43=(a43*a15);
  a12=(a12+a43);
  a85=(a85*a12);
  a114=(a114*a5);
  a12=(a75*a15);
  a114=(a114-a12);
  a113=(a113*a5);
  a114=(a114+a113);
  a114=(a114/a6);
  a92=(a92/a6);
  a92=(a92*a15);
  a114=(a114+a92);
  a114=(a114/a6);
  a84=(a84/a6);
  a84=(a84*a15);
  a114=(a114+a84);
  a1=(a1*a114);
  a85=(a85+a1);
  a98=(a75*a98);
  a85=(a85-a98);
  a4=(a4*a85);
  a91=(a91+a4);
  a36=(a36+a91);
  a36=(-a36);
  if (res[0]!=0) res[0][37]=a36;
  a36=cos(a11);
  a91=(a44*a15);
  a4=(a83*a16);
  a91=(a91-a4);
  a4=(a86*a19);
  a91=(a91-a4);
  a4=(a47*a15);
  a91=(a91+a4);
  a4=(a102*a23);
  a91=(a91-a4);
  a4=(a49*a15);
  a91=(a91+a4);
  a4=(a108*a26);
  a91=(a91-a4);
  a20=(a94*a20);
  a91=(a91+a20);
  a20=(a52*a15);
  a91=(a91+a20);
  a36=(a36*a91);
  a91=sin(a11);
  a16=(a100*a16);
  a20=(a3*a15);
  a16=(a16-a20);
  a19=(a82*a19);
  a16=(a16+a19);
  a19=(a8*a15);
  a16=(a16-a19);
  a23=(a106*a23);
  a16=(a16+a23);
  a23=(a10*a15);
  a16=(a16-a23);
  a26=(a110*a26);
  a16=(a16+a26);
  a50=(a81*a50);
  a16=(a16-a50);
  a50=(a28*a15);
  a16=(a16-a50);
  a91=(a91*a16);
  a36=(a36-a91);
  if (res[0]!=0) res[0][38]=a36;
  a36=(a79*a15);
  a91=(a76*a36);
  a101=(a90*a101);
  a16=(a72*a101);
  a91=(a91-a16);
  a40=(a40*a5);
  a40=(a35*a40);
  a91=(a91-a40);
  if (res[0]!=0) res[0][39]=a91;
  a91=(a104*a5);
  a76=(a76*a91);
  a101=(a75*a101);
  a76=(a76-a101);
  a101=(a112*a15);
  a62=(a62*a101);
  a62=(a35*a62);
  a76=(a76+a62);
  a101=(a112*a97);
  a76=(a76-a101);
  a99=(a112*a99);
  a76=(a76-a99);
  if (res[0]!=0) res[0][40]=a76;
  a72=(a72*a91);
  a75=(a75*a36);
  a72=(a72+a75);
  a75=(a90*a15);
  a95=(a95*a75);
  a35=(a35*a95);
  a72=(a72+a35);
  a97=(a90*a97);
  a72=(a72-a97);
  a103=(a90*a103);
  a72=(a72-a103);
  if (res[0]!=0) res[0][41]=a72;
  a111=(a111*a5);
  a60=(a25*a60);
  a111=(a111-a60);
  a111=(a2*a111);
  a111=(-a111);
  if (res[0]!=0) res[0][42]=a111;
  a109=(a109*a5);
  a63=(a25*a63);
  a109=(a109-a63);
  a109=(a2*a109);
  if (res[0]!=0) res[0][43]=a109;
  a73=(a73*a15);
  a73=(a2*a73);
  a73=(-a73);
  if (res[0]!=0) res[0][44]=a73;
  a107=(a107*a5);
  a58=(a22*a58);
  a107=(a107-a58);
  a107=(a2*a107);
  a107=(-a107);
  if (res[0]!=0) res[0][45]=a107;
  a105=(a105*a5);
  a61=(a22*a61);
  a105=(a105-a61);
  a105=(a2*a105);
  if (res[0]!=0) res[0][46]=a105;
  a116=(a116*a15);
  a116=(a2*a116);
  a116=(-a116);
  if (res[0]!=0) res[0][47]=a116;
  a89=(a89*a5);
  a57=(a18*a57);
  a89=(a89-a57);
  a89=(a2*a89);
  a89=(-a89);
  if (res[0]!=0) res[0][48]=a89;
  a87=(a87*a5);
  a59=(a18*a59);
  a87=(a87-a59);
  a87=(a2*a87);
  if (res[0]!=0) res[0][49]=a87;
  a115=(a115*a15);
  a115=(a2*a115);
  a115=(-a115);
  if (res[0]!=0) res[0][50]=a115;
  a70=(a70*a5);
  a53=(a14*a53);
  a70=(a70-a53);
  a70=(a2*a70);
  a70=(-a70);
  if (res[0]!=0) res[0][51]=a70;
  a74=(a74*a5);
  a56=(a14*a56);
  a74=(a74-a56);
  a74=(a2*a74);
  if (res[0]!=0) res[0][52]=a74;
  a77=(a77*a15);
  a77=(a2*a77);
  a77=(-a77);
  if (res[0]!=0) res[0][53]=a77;
  if (res[0]!=0) res[0][54]=a40;
  a62=(-a62);
  if (res[0]!=0) res[0][55]=a62;
  a35=(-a35);
  if (res[0]!=0) res[0][56]=a35;
  a35=(a100*a13);
  a0=(a14*a0);
  a35=(a35-a0);
  a0=(a82*a17);
  a35=(a35+a0);
  a7=(a18*a7);
  a35=(a35-a7);
  a7=(a106*a21);
  a35=(a35+a7);
  a9=(a22*a9);
  a35=(a35-a9);
  a9=(a110*a24);
  a35=(a35+a9);
  a45=(a81*a45);
  a35=(a35-a45);
  a27=(a25*a27);
  a35=(a35-a27);
  a27=(a83*a29);
  a35=(a35+a27);
  a44=(a6*a44);
  a35=(a35-a44);
  a44=(a86*a30);
  a35=(a35+a44);
  a47=(a6*a47);
  a35=(a35-a47);
  a47=(a102*a32);
  a35=(a35+a47);
  a49=(a6*a49);
  a35=(a35-a49);
  a49=(a108*a33);
  a35=(a35+a49);
  a31=(a94*a31);
  a35=(a35-a31);
  a52=(a6*a52);
  a35=(a35-a52);
  a52=sin(a11);
  a35=(a35*a52);
  a13=(a83*a13);
  a42=(a14*a42);
  a13=(a13-a42);
  a17=(a86*a17);
  a13=(a13+a17);
  a46=(a18*a46);
  a13=(a13-a46);
  a21=(a102*a21);
  a13=(a13+a21);
  a48=(a22*a48);
  a13=(a13-a48);
  a24=(a108*a24);
  a13=(a13+a24);
  a38=(a94*a38);
  a13=(a13-a38);
  a51=(a25*a51);
  a13=(a13-a51);
  a29=(a100*a29);
  a13=(a13-a29);
  a3=(a6*a3);
  a13=(a13+a3);
  a30=(a82*a30);
  a13=(a13-a30);
  a8=(a6*a8);
  a13=(a13+a8);
  a32=(a106*a32);
  a13=(a13-a32);
  a10=(a6*a10);
  a13=(a13+a10);
  a33=(a110*a33);
  a13=(a13-a33);
  a54=(a81*a54);
  a13=(a13+a54);
  a28=(a6*a28);
  a13=(a13+a28);
  a11=cos(a11);
  a13=(a13*a11);
  a35=(a35+a13);
  a35=(-a35);
  if (res[0]!=0) res[0][57]=a35;
  a35=(a25*a39);
  a35=(a37*a35);
  a71=(a25*a71);
  a71=(a2*a71);
  a35=(a35-a71);
  if (res[0]!=0) res[0][58]=a35;
  a35=(a25*a34);
  a35=(a37*a35);
  a25=(a25*a68);
  a25=(a2*a25);
  a35=(a35+a25);
  a35=(-a35);
  if (res[0]!=0) res[0][59]=a35;
  a35=(a110*a39);
  a25=(a81*a39);
  a68=(a94*a34);
  a71=(a25+a68);
  a35=(a35-a71);
  a71=(a108*a34);
  a35=(a35+a71);
  a35=(a6*a35);
  a35=(a2*a35);
  a81=(a81*a34);
  a94=(a94*a39);
  a71=(a81-a94);
  a108=(a108*a39);
  a71=(a71+a108);
  a110=(a110*a34);
  a71=(a71-a110);
  a71=(a37*a71);
  a35=(a35-a71);
  if (res[0]!=0) res[0][60]=a35;
  a35=(a22*a39);
  a35=(a37*a35);
  a69=(a22*a69);
  a69=(a2*a69);
  a35=(a35-a69);
  if (res[0]!=0) res[0][61]=a35;
  a35=(a22*a34);
  a35=(a37*a35);
  a22=(a22*a66);
  a22=(a2*a22);
  a35=(a35+a22);
  a35=(-a35);
  if (res[0]!=0) res[0][62]=a35;
  a35=(a106*a39);
  a22=(a25+a68);
  a35=(a35-a22);
  a22=(a102*a34);
  a35=(a35+a22);
  a35=(a6*a35);
  a35=(a2*a35);
  a22=(a81-a94);
  a102=(a102*a39);
  a22=(a22+a102);
  a106=(a106*a34);
  a22=(a22-a106);
  a22=(a37*a22);
  a35=(a35-a22);
  if (res[0]!=0) res[0][63]=a35;
  a35=(a18*a39);
  a35=(a37*a35);
  a67=(a18*a67);
  a67=(a2*a67);
  a35=(a35-a67);
  if (res[0]!=0) res[0][64]=a35;
  a35=(a18*a34);
  a35=(a37*a35);
  a18=(a18*a65);
  a18=(a2*a18);
  a35=(a35+a18);
  a35=(-a35);
  if (res[0]!=0) res[0][65]=a35;
  a35=(a82*a39);
  a18=(a25+a68);
  a35=(a35-a18);
  a18=(a86*a34);
  a35=(a35+a18);
  a35=(a6*a35);
  a35=(a2*a35);
  a18=(a81-a94);
  a86=(a86*a39);
  a18=(a18+a86);
  a82=(a82*a34);
  a18=(a18-a82);
  a18=(a37*a18);
  a35=(a35-a18);
  if (res[0]!=0) res[0][66]=a35;
  a35=(a14*a39);
  a35=(a37*a35);
  a64=(a14*a64);
  a64=(a2*a64);
  a35=(a35-a64);
  if (res[0]!=0) res[0][67]=a35;
  a35=(a14*a34);
  a35=(a37*a35);
  a14=(a14*a55);
  a14=(a2*a14);
  a35=(a35+a14);
  a35=(-a35);
  if (res[0]!=0) res[0][68]=a35;
  a35=(a100*a39);
  a25=(a25+a68);
  a35=(a35-a25);
  a25=(a83*a34);
  a35=(a35+a25);
  a35=(a6*a35);
  a35=(a2*a35);
  a81=(a81-a94);
  a83=(a83*a39);
  a81=(a81+a83);
  a100=(a100*a34);
  a81=(a81-a100);
  a37=(a37*a81);
  a35=(a35-a37);
  if (res[0]!=0) res[0][69]=a35;
  a93=(a90*a93);
  a78=(a78*a112);
  a78=(a80*a78);
  a93=(a93+a78);
  if (res[0]!=0) res[0][70]=a93;
  a96=(a96*a90);
  a80=(a80*a96);
  a6=(a6*a79);
  a80=(a80-a6);
  if (res[0]!=0) res[0][71]=a80;
  a41=(a41*a104);
  a104=2.8968800000000020e-02;
  a104=(a104*a2);
  a41=(a41+a104);
  if (res[0]!=0) res[0][72]=a41;
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT int eval_hess_g_leg_simple(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem){
  return casadi_f0(arg, res, iw, w, mem);
}

extern "C" CASADI_SYMBOL_EXPORT int eval_hess_g_leg_simple_alloc_mem(void) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT int eval_hess_g_leg_simple_init_mem(int mem) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT void eval_hess_g_leg_simple_free_mem(int mem) {
}

extern "C" CASADI_SYMBOL_EXPORT int eval_hess_g_leg_simple_checkout(void) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT void eval_hess_g_leg_simple_release(int mem) {
}

extern "C" CASADI_SYMBOL_EXPORT void eval_hess_g_leg_simple_incref(void) {
}

extern "C" CASADI_SYMBOL_EXPORT void eval_hess_g_leg_simple_decref(void) {
}

extern "C" CASADI_SYMBOL_EXPORT casadi_int eval_hess_g_leg_simple_n_in(void) { return 3;}

extern "C" CASADI_SYMBOL_EXPORT casadi_int eval_hess_g_leg_simple_n_out(void) { return 1;}

extern "C" CASADI_SYMBOL_EXPORT casadi_real eval_hess_g_leg_simple_default_in(casadi_int i){
  switch (i) {
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const char* eval_hess_g_leg_simple_name_in(casadi_int i){
  switch (i) {
    case 0: return "w";
    case 1: return "lambda";
    case 2: return "p";
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const char* eval_hess_g_leg_simple_name_out(casadi_int i){
  switch (i) {
    case 0: return "hess_g";
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const casadi_int* eval_hess_g_leg_simple_sparsity_in(casadi_int i) {
  switch (i) {
    case 0: return casadi_s0;
    case 1: return casadi_s1;
    case 2: return casadi_s2;
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const casadi_int* eval_hess_g_leg_simple_sparsity_out(casadi_int i) {
  switch (i) {
    case 0: return casadi_s3;
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT int eval_hess_g_leg_simple_work(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w) {
  if (sz_arg) *sz_arg = 3;
  if (sz_res) *sz_res = 1;
  if (sz_iw) *sz_iw = 0;
  if (sz_w) *sz_w = 0;
  return 0;
}


