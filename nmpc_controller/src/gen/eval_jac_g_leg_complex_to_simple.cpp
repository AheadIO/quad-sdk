/* This file was automatically generated by CasADi.
   The CasADi copyright holders make no ownership claim of its contents. */
/* How to prefix internal symbols */
#ifdef CASADI_CODEGEN_PREFIX
  #define CASADI_NAMESPACE_CONCAT(NS, ID) _CASADI_NAMESPACE_CONCAT(NS, ID)
  #define _CASADI_NAMESPACE_CONCAT(NS, ID) NS ## ID
  #define CASADI_PREFIX(ID) CASADI_NAMESPACE_CONCAT(CODEGEN_PREFIX, ID)
#else
  #define CASADI_PREFIX(ID) eval_jac_g_leg_complex_to_simple_ ## ID
#endif

#include <math.h>

#ifndef casadi_real
#define casadi_real double
#endif

#ifndef casadi_int
#define casadi_int long long int
#endif

/* Add prefix to internal symbols */
#define casadi_f0 CASADI_PREFIX(f0)
#define casadi_s0 CASADI_PREFIX(s0)
#define casadi_s1 CASADI_PREFIX(s1)
#define casadi_s2 CASADI_PREFIX(s2)
#define casadi_sq CASADI_PREFIX(sq)

/* Symbol visibility in DLLs */
#ifndef CASADI_SYMBOL_EXPORT
  #if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
    #if defined(STATIC_LINKED)
      #define CASADI_SYMBOL_EXPORT
    #else
      #define CASADI_SYMBOL_EXPORT __declspec(dllexport)
    #endif
  #elif defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
    #define CASADI_SYMBOL_EXPORT __attribute__ ((visibility ("default")))
  #else
    #define CASADI_SYMBOL_EXPORT
  #endif
#endif

casadi_real casadi_sq(casadi_real x) { return x*x;}

static const casadi_int casadi_s0[124] = {120, 1, 0, 120, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119};
static const casadi_int casadi_s1[18] = {14, 1, 0, 14, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13};
static const casadi_int casadi_s2[356] = {52, 120, 0, 1, 2, 3, 4, 5, 6, 8, 10, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 61, 68, 76, 83, 90, 98, 105, 112, 120, 127, 134, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 170, 174, 177, 182, 187, 190, 191, 192, 193, 197, 203, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 0, 1, 2, 3, 4, 5, 0, 6, 1, 7, 2, 8, 9, 11, 10, 11, 10, 11, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 28, 40, 29, 41, 30, 42, 31, 43, 32, 44, 33, 45, 34, 46, 35, 47, 36, 48, 37, 49, 38, 50, 39, 51, 0, 6, 9, 10, 11, 12, 13, 1, 7, 9, 10, 11, 14, 15, 2, 8, 9, 10, 12, 13, 14, 15, 0, 6, 9, 10, 11, 16, 17, 1, 7, 9, 10, 11, 18, 19, 2, 8, 9, 10, 16, 17, 18, 19, 0, 6, 9, 10, 11, 20, 21, 1, 7, 9, 10, 11, 22, 23, 2, 8, 9, 10, 20, 21, 22, 23, 0, 6, 9, 10, 11, 24, 25, 1, 7, 9, 10, 11, 26, 27, 2, 8, 9, 10, 24, 25, 26, 27, 28, 40, 29, 41, 30, 42, 31, 43, 32, 44, 33, 45, 34, 46, 35, 47, 36, 48, 37, 49, 38, 50, 39, 51, 0, 9, 10, 11, 1, 9, 10, 11, 2, 9, 10, 3, 4, 5, 10, 11, 3, 4, 5, 9, 11, 5, 9, 10, 6, 7, 8, 3, 9, 10, 11, 3, 4, 5, 9, 10, 11, 3, 4, 5, 9, 10, 11, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51};

/* eval_jac_g_leg_complex_to_simple:(w[120],p[14])->(jac_g[52x120,233nz]) */
static int casadi_f0(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_real a0, a1, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a2, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a3, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a4, a40, a41, a42, a43, a44, a45, a46, a47, a48, a49, a5, a50, a51, a52, a53, a54, a55, a56, a57, a58, a59, a6, a60, a61, a62, a63, a64, a65, a66, a67, a68, a69, a7, a70, a71, a72, a73, a74, a75, a76, a77, a78, a79, a8, a80, a81, a82, a83, a84, a85, a86, a87, a88, a89, a9, a90, a91, a92, a93, a94, a95, a96, a97;
  a0=-1.;
  if (res[0]!=0) res[0][0]=a0;
  if (res[0]!=0) res[0][1]=a0;
  if (res[0]!=0) res[0][2]=a0;
  if (res[0]!=0) res[0][3]=a0;
  if (res[0]!=0) res[0][4]=a0;
  if (res[0]!=0) res[0][5]=a0;
  a1=arg[1]? arg[1][0] : 0;
  a2=(-a1);
  if (res[0]!=0) res[0][6]=a2;
  if (res[0]!=0) res[0][7]=a0;
  a2=(-a1);
  if (res[0]!=0) res[0][8]=a2;
  if (res[0]!=0) res[0][9]=a0;
  a2=(-a1);
  if (res[0]!=0) res[0][10]=a2;
  if (res[0]!=0) res[0][11]=a0;
  a2=-9.3212278260869572e-02;
  if (res[0]!=0) res[0][12]=a2;
  a3=arg[0]? arg[0][88] : 0;
  a4=sin(a3);
  a5=(a2*a4);
  a6=(-a5);
  if (res[0]!=0) res[0][13]=a6;
  a6=4.3125046780173909e-01;
  a7=arg[0]? arg[0][87] : 0;
  a8=cos(a7);
  a9=(a6*a8);
  a10=(-a9);
  if (res[0]!=0) res[0][14]=a10;
  a10=cos(a3);
  a11=sin(a7);
  a12=(a10*a11);
  a12=(a6*a12);
  a13=(-a12);
  if (res[0]!=0) res[0][15]=a13;
  a13=-4.6021926780173911e-01;
  a14=(a13*a11);
  a15=(-a14);
  if (res[0]!=0) res[0][16]=a15;
  a15=4.6021926780173911e-01;
  a16=(a8*a10);
  a16=(a15*a16);
  a17=(-a16);
  if (res[0]!=0) res[0][17]=a17;
  if (res[0]!=0) res[0][18]=a0;
  if (res[0]!=0) res[0][19]=a0;
  if (res[0]!=0) res[0][20]=a0;
  if (res[0]!=0) res[0][21]=a0;
  if (res[0]!=0) res[0][22]=a0;
  if (res[0]!=0) res[0][23]=a0;
  if (res[0]!=0) res[0][24]=a0;
  if (res[0]!=0) res[0][25]=a0;
  if (res[0]!=0) res[0][26]=a0;
  if (res[0]!=0) res[0][27]=a0;
  if (res[0]!=0) res[0][28]=a0;
  if (res[0]!=0) res[0][29]=a0;
  a17=(-a1);
  if (res[0]!=0) res[0][30]=a17;
  if (res[0]!=0) res[0][31]=a0;
  a17=(-a1);
  if (res[0]!=0) res[0][32]=a17;
  if (res[0]!=0) res[0][33]=a0;
  a17=(-a1);
  if (res[0]!=0) res[0][34]=a17;
  if (res[0]!=0) res[0][35]=a0;
  a17=(-a1);
  if (res[0]!=0) res[0][36]=a17;
  if (res[0]!=0) res[0][37]=a0;
  a17=(-a1);
  if (res[0]!=0) res[0][38]=a17;
  if (res[0]!=0) res[0][39]=a0;
  a17=(-a1);
  if (res[0]!=0) res[0][40]=a17;
  if (res[0]!=0) res[0][41]=a0;
  a17=(-a1);
  if (res[0]!=0) res[0][42]=a17;
  if (res[0]!=0) res[0][43]=a0;
  a17=(-a1);
  if (res[0]!=0) res[0][44]=a17;
  if (res[0]!=0) res[0][45]=a0;
  a17=(-a1);
  if (res[0]!=0) res[0][46]=a17;
  if (res[0]!=0) res[0][47]=a0;
  a17=(-a1);
  if (res[0]!=0) res[0][48]=a17;
  if (res[0]!=0) res[0][49]=a0;
  a17=(-a1);
  if (res[0]!=0) res[0][50]=a17;
  if (res[0]!=0) res[0][51]=a0;
  a17=(-a1);
  if (res[0]!=0) res[0][52]=a17;
  if (res[0]!=0) res[0][53]=a0;
  a17=7.5187969924812026e-02;
  a18=5.0000000000000000e-01;
  a19=casadi_sq(a1);
  a20=(a18*a19);
  a20=(a17*a20);
  a20=(-a20);
  if (res[0]!=0) res[0][54]=a20;
  a21=(a17*a1);
  a21=(-a21);
  if (res[0]!=0) res[0][55]=a21;
  a22=arg[1]? arg[1][3] : 0;
  a23=arg[0]? arg[0][85] : 0;
  a24=(a22-a23);
  a25=(a4*a24);
  a26=arg[0]? arg[0][89] : 0;
  a27=sin(a26);
  a28=(a10*a27);
  a29=arg[1]? arg[1][4] : 0;
  a30=arg[0]? arg[0][86] : 0;
  a29=(a29-a30);
  a31=(a28*a29);
  a25=(a25+a31);
  a25=(a25*a1);
  a25=(-a25);
  if (res[0]!=0) res[0][56]=a25;
  a25=cos(a26);
  a31=(a25*a29);
  a31=(a31*a1);
  a31=(-a31);
  if (res[0]!=0) res[0][57]=a31;
  a31=(a23-a22);
  a31=(a31*a1);
  a31=(-a31);
  if (res[0]!=0) res[0][58]=a31;
  a31=1.;
  if (res[0]!=0) res[0][59]=a31;
  if (res[0]!=0) res[0][60]=a0;
  a32=(a18*a19);
  a32=(a17*a32);
  a32=(-a32);
  if (res[0]!=0) res[0][61]=a32;
  a33=(a17*a1);
  a33=(-a33);
  if (res[0]!=0) res[0][62]=a33;
  a34=arg[1]? arg[1][2] : 0;
  a35=arg[0]? arg[0][84] : 0;
  a36=(a34-a35);
  a37=(a4*a36);
  a38=(a10*a25);
  a39=(a38*a29);
  a37=(a37+a39);
  a37=(a37*a1);
  if (res[0]!=0) res[0][63]=a37;
  a37=(a27*a29);
  a37=(a37*a1);
  a37=(-a37);
  if (res[0]!=0) res[0][64]=a37;
  a37=(a36*a1);
  a37=(-a37);
  if (res[0]!=0) res[0][65]=a37;
  if (res[0]!=0) res[0][66]=a31;
  if (res[0]!=0) res[0][67]=a0;
  a19=(a18*a19);
  a19=(a17*a19);
  a19=(-a19);
  if (res[0]!=0) res[0][68]=a19;
  a17=(a17*a1);
  a17=(-a17);
  if (res[0]!=0) res[0][69]=a17;
  a37=(a23*a25);
  a39=(a35*a27);
  a40=(a37-a39);
  a41=(a22*a25);
  a40=(a40-a41);
  a41=(a34*a27);
  a40=(a40+a41);
  a41=(a10*a40);
  a41=(a41*a1);
  if (res[0]!=0) res[0][70]=a41;
  a41=(a35*a25);
  a42=(a23*a27);
  a43=(a41+a42);
  a44=(a34*a25);
  a43=(a43-a44);
  a44=(a22*a27);
  a43=(a43-a44);
  a43=(a43*a1);
  a43=(-a43);
  if (res[0]!=0) res[0][71]=a43;
  a43=arg[1]? arg[1][1] : 0;
  a44=(-a43);
  if (res[0]!=0) res[0][72]=a44;
  a44=(-a43);
  if (res[0]!=0) res[0][73]=a44;
  a44=(-a43);
  if (res[0]!=0) res[0][74]=a44;
  a44=(-a43);
  if (res[0]!=0) res[0][75]=a44;
  if (res[0]!=0) res[0][76]=a20;
  if (res[0]!=0) res[0][77]=a21;
  a44=arg[1]? arg[1][6] : 0;
  a45=(a44-a23);
  a46=(a4*a45);
  a47=(a10*a27);
  a48=arg[1]? arg[1][7] : 0;
  a48=(a48-a30);
  a49=(a47*a48);
  a46=(a46+a49);
  a46=(a46*a1);
  a46=(-a46);
  if (res[0]!=0) res[0][78]=a46;
  a46=(a25*a48);
  a46=(a46*a1);
  a46=(-a46);
  if (res[0]!=0) res[0][79]=a46;
  a46=(a23-a44);
  a46=(a46*a1);
  a46=(-a46);
  if (res[0]!=0) res[0][80]=a46;
  if (res[0]!=0) res[0][81]=a31;
  if (res[0]!=0) res[0][82]=a0;
  if (res[0]!=0) res[0][83]=a32;
  if (res[0]!=0) res[0][84]=a33;
  a46=arg[1]? arg[1][5] : 0;
  a49=(a46-a35);
  a50=(a4*a49);
  a51=(a10*a25);
  a52=(a51*a48);
  a50=(a50+a52);
  a50=(a50*a1);
  if (res[0]!=0) res[0][85]=a50;
  a50=(a27*a48);
  a50=(a50*a1);
  a50=(-a50);
  if (res[0]!=0) res[0][86]=a50;
  a50=(a49*a1);
  a50=(-a50);
  if (res[0]!=0) res[0][87]=a50;
  if (res[0]!=0) res[0][88]=a31;
  if (res[0]!=0) res[0][89]=a0;
  if (res[0]!=0) res[0][90]=a19;
  if (res[0]!=0) res[0][91]=a17;
  a50=(a37-a39);
  a52=(a44*a25);
  a50=(a50-a52);
  a52=(a46*a27);
  a50=(a50+a52);
  a52=(a10*a50);
  a52=(a52*a1);
  if (res[0]!=0) res[0][92]=a52;
  a52=(a41+a42);
  a53=(a46*a25);
  a52=(a52-a53);
  a53=(a44*a27);
  a52=(a52-a53);
  a52=(a52*a1);
  a52=(-a52);
  if (res[0]!=0) res[0][93]=a52;
  a52=(-a43);
  if (res[0]!=0) res[0][94]=a52;
  a52=(-a43);
  if (res[0]!=0) res[0][95]=a52;
  a52=(-a43);
  if (res[0]!=0) res[0][96]=a52;
  a52=(-a43);
  if (res[0]!=0) res[0][97]=a52;
  if (res[0]!=0) res[0][98]=a20;
  if (res[0]!=0) res[0][99]=a21;
  a52=arg[1]? arg[1][9] : 0;
  a53=(a52-a23);
  a54=(a4*a53);
  a55=(a10*a27);
  a56=arg[1]? arg[1][10] : 0;
  a56=(a56-a30);
  a57=(a55*a56);
  a54=(a54+a57);
  a54=(a54*a1);
  a54=(-a54);
  if (res[0]!=0) res[0][100]=a54;
  a54=(a25*a56);
  a54=(a54*a1);
  a54=(-a54);
  if (res[0]!=0) res[0][101]=a54;
  a54=(a23-a52);
  a54=(a54*a1);
  a54=(-a54);
  if (res[0]!=0) res[0][102]=a54;
  if (res[0]!=0) res[0][103]=a31;
  if (res[0]!=0) res[0][104]=a0;
  if (res[0]!=0) res[0][105]=a32;
  if (res[0]!=0) res[0][106]=a33;
  a54=arg[1]? arg[1][8] : 0;
  a57=(a54-a35);
  a58=(a4*a57);
  a59=(a10*a25);
  a60=(a59*a56);
  a58=(a58+a60);
  a58=(a58*a1);
  if (res[0]!=0) res[0][107]=a58;
  a58=(a27*a56);
  a58=(a58*a1);
  a58=(-a58);
  if (res[0]!=0) res[0][108]=a58;
  a58=(a57*a1);
  a58=(-a58);
  if (res[0]!=0) res[0][109]=a58;
  if (res[0]!=0) res[0][110]=a31;
  if (res[0]!=0) res[0][111]=a0;
  if (res[0]!=0) res[0][112]=a19;
  if (res[0]!=0) res[0][113]=a17;
  a58=(a37-a39);
  a60=(a52*a25);
  a58=(a58-a60);
  a60=(a54*a27);
  a58=(a58+a60);
  a60=(a10*a58);
  a60=(a60*a1);
  if (res[0]!=0) res[0][114]=a60;
  a60=(a41+a42);
  a61=(a54*a25);
  a60=(a60-a61);
  a61=(a52*a27);
  a60=(a60-a61);
  a60=(a60*a1);
  a60=(-a60);
  if (res[0]!=0) res[0][115]=a60;
  a60=(-a43);
  if (res[0]!=0) res[0][116]=a60;
  a60=(-a43);
  if (res[0]!=0) res[0][117]=a60;
  a60=(-a43);
  if (res[0]!=0) res[0][118]=a60;
  a60=(-a43);
  if (res[0]!=0) res[0][119]=a60;
  if (res[0]!=0) res[0][120]=a20;
  if (res[0]!=0) res[0][121]=a21;
  a21=arg[1]? arg[1][12] : 0;
  a20=(a21-a23);
  a60=(a4*a20);
  a61=(a10*a27);
  a62=arg[1]? arg[1][13] : 0;
  a62=(a62-a30);
  a30=(a61*a62);
  a60=(a60+a30);
  a60=(a60*a1);
  a60=(-a60);
  if (res[0]!=0) res[0][122]=a60;
  a60=(a25*a62);
  a60=(a60*a1);
  a60=(-a60);
  if (res[0]!=0) res[0][123]=a60;
  a60=(a23-a21);
  a60=(a60*a1);
  a60=(-a60);
  if (res[0]!=0) res[0][124]=a60;
  if (res[0]!=0) res[0][125]=a31;
  if (res[0]!=0) res[0][126]=a0;
  if (res[0]!=0) res[0][127]=a32;
  if (res[0]!=0) res[0][128]=a33;
  a33=arg[1]? arg[1][11] : 0;
  a32=(a33-a35);
  a60=(a4*a32);
  a30=(a10*a25);
  a63=(a30*a62);
  a60=(a60+a63);
  a60=(a60*a1);
  if (res[0]!=0) res[0][129]=a60;
  a60=(a27*a62);
  a60=(a60*a1);
  a60=(-a60);
  if (res[0]!=0) res[0][130]=a60;
  a60=(a32*a1);
  a60=(-a60);
  if (res[0]!=0) res[0][131]=a60;
  if (res[0]!=0) res[0][132]=a31;
  if (res[0]!=0) res[0][133]=a0;
  if (res[0]!=0) res[0][134]=a19;
  if (res[0]!=0) res[0][135]=a17;
  a37=(a37-a39);
  a39=(a21*a25);
  a37=(a37-a39);
  a39=(a33*a27);
  a37=(a37+a39);
  a39=(a10*a37);
  a39=(a39*a1);
  if (res[0]!=0) res[0][136]=a39;
  a41=(a41+a42);
  a42=(a33*a25);
  a41=(a41-a42);
  a42=(a21*a27);
  a41=(a41-a42);
  a41=(a41*a1);
  a41=(-a41);
  if (res[0]!=0) res[0][137]=a41;
  a41=(-a43);
  if (res[0]!=0) res[0][138]=a41;
  a41=(-a43);
  if (res[0]!=0) res[0][139]=a41;
  a41=(-a43);
  if (res[0]!=0) res[0][140]=a41;
  a43=(-a43);
  if (res[0]!=0) res[0][141]=a43;
  a43=100.;
  a41=casadi_sq(a1);
  a42=(a18*a41);
  a42=(a43*a42);
  a42=(-a42);
  if (res[0]!=0) res[0][142]=a42;
  a42=(a43*a1);
  a42=(-a42);
  if (res[0]!=0) res[0][143]=a42;
  a42=(a18*a41);
  a42=(a43*a42);
  a42=(-a42);
  if (res[0]!=0) res[0][144]=a42;
  a42=(a43*a1);
  a42=(-a42);
  if (res[0]!=0) res[0][145]=a42;
  a42=(a18*a41);
  a42=(a43*a42);
  a42=(-a42);
  if (res[0]!=0) res[0][146]=a42;
  a42=(a43*a1);
  a42=(-a42);
  if (res[0]!=0) res[0][147]=a42;
  a42=(a18*a41);
  a42=(a43*a42);
  a42=(-a42);
  if (res[0]!=0) res[0][148]=a42;
  a42=(a43*a1);
  a42=(-a42);
  if (res[0]!=0) res[0][149]=a42;
  a42=(a18*a41);
  a42=(a43*a42);
  a42=(-a42);
  if (res[0]!=0) res[0][150]=a42;
  a42=(a43*a1);
  a42=(-a42);
  if (res[0]!=0) res[0][151]=a42;
  a42=(a18*a41);
  a42=(a43*a42);
  a42=(-a42);
  if (res[0]!=0) res[0][152]=a42;
  a42=(a43*a1);
  a42=(-a42);
  if (res[0]!=0) res[0][153]=a42;
  a42=(a18*a41);
  a42=(a43*a42);
  a42=(-a42);
  if (res[0]!=0) res[0][154]=a42;
  a42=(a43*a1);
  a42=(-a42);
  if (res[0]!=0) res[0][155]=a42;
  a42=(a18*a41);
  a42=(a43*a42);
  a42=(-a42);
  if (res[0]!=0) res[0][156]=a42;
  a42=(a43*a1);
  a42=(-a42);
  if (res[0]!=0) res[0][157]=a42;
  a42=(a18*a41);
  a42=(a43*a42);
  a42=(-a42);
  if (res[0]!=0) res[0][158]=a42;
  a42=(a43*a1);
  a42=(-a42);
  if (res[0]!=0) res[0][159]=a42;
  a42=(a18*a41);
  a42=(a43*a42);
  a42=(-a42);
  if (res[0]!=0) res[0][160]=a42;
  a42=(a43*a1);
  a42=(-a42);
  if (res[0]!=0) res[0][161]=a42;
  a42=(a18*a41);
  a42=(a43*a42);
  a42=(-a42);
  if (res[0]!=0) res[0][162]=a42;
  a42=(a43*a1);
  a42=(-a42);
  if (res[0]!=0) res[0][163]=a42;
  a18=(a18*a41);
  a18=(a43*a18);
  a18=(-a18);
  if (res[0]!=0) res[0][164]=a18;
  a43=(a43*a1);
  a43=(-a43);
  if (res[0]!=0) res[0][165]=a43;
  if (res[0]!=0) res[0][166]=a31;
  a43=arg[0]? arg[0][70] : 0;
  a18=(a43*a1);
  a41=(a4*a18);
  a42=arg[0]? arg[0][67] : 0;
  a39=(a42*a1);
  a17=(a4*a39);
  a41=(a41+a17);
  a17=arg[0]? arg[0][64] : 0;
  a19=(a17*a1);
  a0=(a4*a19);
  a41=(a41+a0);
  a0=arg[0]? arg[0][71] : 0;
  a60=(a0*a1);
  a63=(a10*a60);
  a64=arg[0]? arg[0][68] : 0;
  a65=(a64*a1);
  a66=(a10*a65);
  a67=(a63+a66);
  a68=arg[0]? arg[0][65] : 0;
  a69=(a68*a1);
  a70=(a10*a69);
  a67=(a67+a70);
  a71=arg[0]? arg[0][62] : 0;
  a72=(a71*a1);
  a73=(a10*a72);
  a67=(a67+a73);
  a74=(a27*a67);
  a41=(a41+a74);
  a74=arg[0]? arg[0][61] : 0;
  a75=(a74*a1);
  a76=(a4*a75);
  a41=(a41+a76);
  a41=(-a41);
  if (res[0]!=0) res[0][167]=a41;
  a0=(a0*a1);
  a64=(a64*a1);
  a41=(a0+a64);
  a68=(a68*a1);
  a41=(a41+a68);
  a71=(a71*a1);
  a41=(a41+a71);
  a76=(a25*a41);
  a76=(-a76);
  if (res[0]!=0) res[0][168]=a76;
  a76=(a43*a1);
  a77=(a42*a1);
  a76=(a76+a77);
  a77=(a17*a1);
  a76=(a76+a77);
  a77=(a74*a1);
  a76=(a76+a77);
  if (res[0]!=0) res[0][169]=a76;
  if (res[0]!=0) res[0][170]=a31;
  a76=arg[0]? arg[0][69] : 0;
  a77=(a76*a1);
  a78=(a4*a77);
  a79=arg[0]? arg[0][66] : 0;
  a80=(a79*a1);
  a81=(a4*a80);
  a78=(a78+a81);
  a81=arg[0]? arg[0][63] : 0;
  a82=(a81*a1);
  a83=(a4*a82);
  a78=(a78+a83);
  a83=(a63+a66);
  a83=(a83+a70);
  a83=(a83+a73);
  a84=(a25*a83);
  a78=(a78+a84);
  a84=arg[0]? arg[0][60] : 0;
  a85=(a84*a1);
  a86=(a4*a85);
  a78=(a78+a86);
  if (res[0]!=0) res[0][171]=a78;
  a78=(a0+a64);
  a78=(a78+a68);
  a78=(a78+a71);
  a86=(a27*a78);
  a86=(-a86);
  if (res[0]!=0) res[0][172]=a86;
  a86=(a76*a1);
  a87=(a79*a1);
  a86=(a86+a87);
  a87=(a81*a1);
  a86=(a86+a87);
  a87=(a84*a1);
  a86=(a86+a87);
  a86=(-a86);
  if (res[0]!=0) res[0][173]=a86;
  if (res[0]!=0) res[0][174]=a31;
  a30=(a30*a18);
  a61=(a61*a77);
  a30=(a30-a61);
  a59=(a59*a39);
  a55=(a55*a80);
  a59=(a59-a55);
  a30=(a30+a59);
  a51=(a51*a19);
  a47=(a47*a82);
  a51=(a51-a47);
  a30=(a30+a51);
  a38=(a38*a75);
  a28=(a28*a85);
  a38=(a38-a28);
  a30=(a30+a38);
  a30=(-a30);
  if (res[0]!=0) res[0][175]=a30;
  a43=(a43*a1);
  a30=(a27*a43);
  a76=(a76*a1);
  a38=(a25*a76);
  a30=(a30+a38);
  a42=(a42*a1);
  a38=(a27*a42);
  a79=(a79*a1);
  a28=(a25*a79);
  a38=(a38+a28);
  a30=(a30+a38);
  a17=(a17*a1);
  a38=(a27*a17);
  a81=(a81*a1);
  a28=(a25*a81);
  a38=(a38+a28);
  a30=(a30+a38);
  a74=(a74*a1);
  a38=(a27*a74);
  a84=(a84*a1);
  a28=(a25*a84);
  a38=(a38+a28);
  a30=(a30+a38);
  if (res[0]!=0) res[0][176]=a30;
  a30=sin(a7);
  a38=arg[0]? arg[0][95] : 0;
  a28=(a1/a10);
  a51=(a4*a28);
  a47=(a38*a51);
  a47=(a30*a47);
  a7=cos(a7);
  a59=arg[0]? arg[0][94] : 0;
  a55=(a4*a28);
  a61=(a59*a55);
  a61=(a7*a61);
  a47=(a47-a61);
  a47=(a47+a31);
  if (res[0]!=0) res[0][177]=a47;
  a47=(a38*a1);
  a47=(a7*a47);
  a61=(a59*a1);
  a61=(a30*a61);
  a47=(a47+a61);
  if (res[0]!=0) res[0][178]=a47;
  a47=(a1/a10);
  a61=(a38*a47);
  a61=(a30*a61);
  a86=(a59*a47);
  a86=(a7*a86);
  a61=(a61-a86);
  if (res[0]!=0) res[0][179]=a61;
  a61=24358218631252112.;
  a86=arg[0]? arg[0][93] : 0;
  a87=-1.3877787807814460e-17;
  a87=(a87*a1);
  a88=(a86*a87);
  a89=(a61*a88);
  a90=(a59*a89);
  a91=arg[0]? arg[0][11] : 0;
  a91=(a38-a91);
  a13=(a13*a91);
  a90=(a90+a13);
  a90=(a7*a90);
  a13=26445640661418040.;
  a88=(a13*a88);
  a92=(a38*a88);
  a93=arg[0]? arg[0][10] : 0;
  a93=(a59-a93);
  a94=(a6*a93);
  a92=(a92+a94);
  a92=(a30*a92);
  a90=(a90-a92);
  if (res[0]!=0) res[0][180]=a90;
  a6=(a6*a93);
  a93=(a10*a6);
  a90=(a86*a38);
  a92=(a90*a10);
  a94=3.6700698954086952e-01;
  a94=(a94*a1);
  a92=(a92*a94);
  a93=(a93-a92);
  a7=(a7*a93);
  a93=(a86*a59);
  a92=3.3803818954086950e-01;
  a92=(a92*a1);
  a95=(a10*a92);
  a96=(a93*a95);
  a15=(a15*a91);
  a91=(a10*a15);
  a96=(a96+a91);
  a30=(a30*a96);
  a7=(a7-a30);
  if (res[0]!=0) res[0][181]=a7;
  a7=cos(a3);
  a30=(a59*a11);
  a96=(a30*a28);
  a91=(a38*a8);
  a97=(a91*a28);
  a96=(a96+a97);
  a96=(a7*a96);
  a3=sin(a3);
  a97=(a86*a10);
  a91=(a91*a4);
  a97=(a97+a91);
  a30=(a30*a4);
  a97=(a97+a30);
  a97=(a97/a10);
  a97=(a97/a10);
  a97=(a97*a1);
  a28=(a86*a28);
  a97=(a97-a28);
  a97=(a3*a97);
  a96=(a96+a97);
  a96=(-a96);
  if (res[0]!=0) res[0][182]=a96;
  if (res[0]!=0) res[0][183]=a31;
  a96=(a38*a8);
  a97=(a59*a11);
  a96=(a96+a97);
  a96=(a96/a10);
  a96=(a96/a10);
  a96=(a96*a1);
  a96=(a3*a96);
  a96=(-a96);
  if (res[0]!=0) res[0][184]=a96;
  a32=(a32*a18);
  a20=(a20*a77);
  a32=(a32-a20);
  a57=(a57*a39);
  a32=(a32+a57);
  a53=(a53*a80);
  a32=(a32-a53);
  a49=(a49*a19);
  a32=(a32+a49);
  a45=(a45*a82);
  a32=(a32-a45);
  a36=(a36*a75);
  a32=(a32+a36);
  a24=(a24*a85);
  a32=(a32-a24);
  a32=(a7*a32);
  a37=(a37*a60);
  a18=(a62*a18);
  a60=(a25*a18);
  a37=(a37+a60);
  a77=(a62*a77);
  a60=(a27*a77);
  a37=(a37-a60);
  a58=(a58*a65);
  a37=(a37+a58);
  a39=(a56*a39);
  a58=(a25*a39);
  a37=(a37+a58);
  a80=(a56*a80);
  a58=(a27*a80);
  a37=(a37-a58);
  a50=(a50*a69);
  a37=(a37+a50);
  a19=(a48*a19);
  a50=(a25*a19);
  a37=(a37+a50);
  a82=(a48*a82);
  a50=(a27*a82);
  a37=(a37-a50);
  a40=(a40*a72);
  a37=(a37+a40);
  a75=(a29*a75);
  a25=(a25*a75);
  a37=(a37+a25);
  a85=(a29*a85);
  a27=(a27*a85);
  a37=(a37-a27);
  a37=(a3*a37);
  a32=(a32-a37);
  if (res[0]!=0) res[0][185]=a32;
  a32=(a59*a38);
  a37=-2.8968800000000020e-02;
  a37=(a37*a1);
  a32=(a32*a37);
  a27=arg[0]? arg[0][9] : 0;
  a27=(a86-a27);
  a2=(a2*a27);
  a32=(a32+a2);
  a7=(a7*a32);
  a93=(a93*a8);
  a93=(a93*a92);
  a94=(a11*a94);
  a90=(a90*a94);
  a93=(a93-a90);
  a15=(a8*a15);
  a93=(a93+a15);
  a6=(a11*a6);
  a93=(a93+a6);
  a3=(a3*a93);
  a7=(a7-a3);
  if (res[0]!=0) res[0][186]=a7;
  if (res[0]!=0) res[0][187]=a31;
  a7=cos(a26);
  a3=(a33*a63);
  a77=(a10*a77);
  a3=(a3-a77);
  a77=(a54*a66);
  a3=(a3+a77);
  a80=(a10*a80);
  a3=(a3-a80);
  a80=(a46*a70);
  a3=(a3+a80);
  a82=(a10*a82);
  a3=(a3-a82);
  a82=(a34*a73);
  a3=(a3+a82);
  a67=(a35*a67);
  a3=(a3-a67);
  a85=(a10*a85);
  a3=(a3-a85);
  a3=(a7*a3);
  a26=sin(a26);
  a18=(a10*a18);
  a63=(a21*a63);
  a18=(a18-a63);
  a66=(a52*a66);
  a18=(a18-a66);
  a39=(a10*a39);
  a18=(a18+a39);
  a70=(a44*a70);
  a18=(a18-a70);
  a19=(a10*a19);
  a18=(a18+a19);
  a73=(a22*a73);
  a18=(a18-a73);
  a83=(a23*a83);
  a18=(a18+a83);
  a75=(a10*a75);
  a18=(a18+a75);
  a18=(a26*a18);
  a3=(a3-a18);
  if (res[0]!=0) res[0][188]=a3;
  a21=(a21*a0);
  a43=(a62*a43);
  a21=(a21-a43);
  a52=(a52*a64);
  a21=(a21+a52);
  a42=(a56*a42);
  a21=(a21-a42);
  a44=(a44*a68);
  a21=(a21+a44);
  a17=(a48*a17);
  a21=(a21-a17);
  a22=(a22*a71);
  a21=(a21+a22);
  a23=(a23*a78);
  a21=(a21-a23);
  a74=(a29*a74);
  a21=(a21-a74);
  a7=(a7*a21);
  a33=(a33*a0);
  a62=(a62*a76);
  a33=(a33-a62);
  a54=(a54*a64);
  a33=(a33+a54);
  a56=(a56*a79);
  a33=(a33-a56);
  a46=(a46*a68);
  a33=(a33+a46);
  a48=(a48*a81);
  a33=(a33-a48);
  a34=(a34*a71);
  a33=(a33+a34);
  a35=(a35*a41);
  a33=(a33-a35);
  a29=(a29*a84);
  a33=(a33-a29);
  a26=(a26*a33);
  a7=(a7-a26);
  if (res[0]!=0) res[0][189]=a7;
  if (res[0]!=0) res[0][190]=a31;
  if (res[0]!=0) res[0][191]=a31;
  if (res[0]!=0) res[0][192]=a31;
  a7=(-a1);
  if (res[0]!=0) res[0][193]=a7;
  a7=9.3212278260869572e-02;
  if (res[0]!=0) res[0][194]=a7;
  a7=(a38*a8);
  a13=(a13*a7);
  a7=(a59*a11);
  a61=(a61*a7);
  a13=(a13+a61);
  a13=(a13*a87);
  if (res[0]!=0) res[0][195]=a13;
  a95=(a8*a95);
  a13=(a59*a95);
  a10=(a10*a94);
  a94=(a38*a10);
  a13=(a13-a94);
  a13=(a13+a5);
  if (res[0]!=0) res[0][196]=a13;
  a55=(a11*a55);
  a55=(-a55);
  if (res[0]!=0) res[0][197]=a55;
  a55=(a8*a1);
  a55=(-a55);
  if (res[0]!=0) res[0][198]=a55;
  a55=(a11*a47);
  a55=(-a55);
  if (res[0]!=0) res[0][199]=a55;
  a55=2.8968800000000020e-02;
  a55=(a55*a1);
  a13=(a38*a55);
  if (res[0]!=0) res[0][200]=a13;
  a89=(a11*a89);
  a89=(a89+a9);
  if (res[0]!=0) res[0][201]=a89;
  a95=(a86*a95);
  a4=(a4*a37);
  a38=(a38*a4);
  a95=(a95+a38);
  a95=(a95+a12);
  if (res[0]!=0) res[0][202]=a95;
  a51=(a8*a51);
  a51=(-a51);
  if (res[0]!=0) res[0][203]=a51;
  a11=(a11*a1);
  if (res[0]!=0) res[0][204]=a11;
  a47=(a8*a47);
  a47=(-a47);
  if (res[0]!=0) res[0][205]=a47;
  a55=(a59*a55);
  if (res[0]!=0) res[0][206]=a55;
  a8=(a8*a88);
  a8=(a8+a14);
  if (res[0]!=0) res[0][207]=a8;
  a59=(a59*a4);
  a86=(a86*a10);
  a59=(a59-a86);
  a59=(a59+a16);
  if (res[0]!=0) res[0][208]=a59;
  if (res[0]!=0) res[0][209]=a31;
  if (res[0]!=0) res[0][210]=a31;
  if (res[0]!=0) res[0][211]=a31;
  if (res[0]!=0) res[0][212]=a31;
  if (res[0]!=0) res[0][213]=a31;
  if (res[0]!=0) res[0][214]=a31;
  if (res[0]!=0) res[0][215]=a31;
  if (res[0]!=0) res[0][216]=a31;
  if (res[0]!=0) res[0][217]=a31;
  if (res[0]!=0) res[0][218]=a31;
  if (res[0]!=0) res[0][219]=a31;
  if (res[0]!=0) res[0][220]=a31;
  if (res[0]!=0) res[0][221]=a31;
  if (res[0]!=0) res[0][222]=a31;
  if (res[0]!=0) res[0][223]=a31;
  if (res[0]!=0) res[0][224]=a31;
  if (res[0]!=0) res[0][225]=a31;
  if (res[0]!=0) res[0][226]=a31;
  if (res[0]!=0) res[0][227]=a31;
  if (res[0]!=0) res[0][228]=a31;
  if (res[0]!=0) res[0][229]=a31;
  if (res[0]!=0) res[0][230]=a31;
  if (res[0]!=0) res[0][231]=a31;
  if (res[0]!=0) res[0][232]=a31;
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT int eval_jac_g_leg_complex_to_simple(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem){
  return casadi_f0(arg, res, iw, w, mem);
}

extern "C" CASADI_SYMBOL_EXPORT int eval_jac_g_leg_complex_to_simple_alloc_mem(void) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT int eval_jac_g_leg_complex_to_simple_init_mem(int mem) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT void eval_jac_g_leg_complex_to_simple_free_mem(int mem) {
}

extern "C" CASADI_SYMBOL_EXPORT int eval_jac_g_leg_complex_to_simple_checkout(void) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT void eval_jac_g_leg_complex_to_simple_release(int mem) {
}

extern "C" CASADI_SYMBOL_EXPORT void eval_jac_g_leg_complex_to_simple_incref(void) {
}

extern "C" CASADI_SYMBOL_EXPORT void eval_jac_g_leg_complex_to_simple_decref(void) {
}

extern "C" CASADI_SYMBOL_EXPORT casadi_int eval_jac_g_leg_complex_to_simple_n_in(void) { return 2;}

extern "C" CASADI_SYMBOL_EXPORT casadi_int eval_jac_g_leg_complex_to_simple_n_out(void) { return 1;}

extern "C" CASADI_SYMBOL_EXPORT casadi_real eval_jac_g_leg_complex_to_simple_default_in(casadi_int i){
  switch (i) {
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const char* eval_jac_g_leg_complex_to_simple_name_in(casadi_int i){
  switch (i) {
    case 0: return "w";
    case 1: return "p";
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const char* eval_jac_g_leg_complex_to_simple_name_out(casadi_int i){
  switch (i) {
    case 0: return "jac_g";
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const casadi_int* eval_jac_g_leg_complex_to_simple_sparsity_in(casadi_int i) {
  switch (i) {
    case 0: return casadi_s0;
    case 1: return casadi_s1;
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const casadi_int* eval_jac_g_leg_complex_to_simple_sparsity_out(casadi_int i) {
  switch (i) {
    case 0: return casadi_s2;
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT int eval_jac_g_leg_complex_to_simple_work(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w) {
  if (sz_arg) *sz_arg = 2;
  if (sz_res) *sz_res = 1;
  if (sz_iw) *sz_iw = 0;
  if (sz_w) *sz_w = 0;
  return 0;
}


