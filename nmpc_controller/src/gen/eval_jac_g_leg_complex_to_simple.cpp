/* This file was automatically generated by CasADi.
   The CasADi copyright holders make no ownership claim of its contents. */
/* How to prefix internal symbols */
#ifdef CASADI_CODEGEN_PREFIX
  #define CASADI_NAMESPACE_CONCAT(NS, ID) _CASADI_NAMESPACE_CONCAT(NS, ID)
  #define _CASADI_NAMESPACE_CONCAT(NS, ID) NS ## ID
  #define CASADI_PREFIX(ID) CASADI_NAMESPACE_CONCAT(CODEGEN_PREFIX, ID)
#else
  #define CASADI_PREFIX(ID) eval_jac_g_leg_complex_to_simple_ ## ID
#endif

#include <math.h>

#ifndef casadi_real
#define casadi_real double
#endif

#ifndef casadi_int
#define casadi_int long long int
#endif

/* Add prefix to internal symbols */
#define casadi_f0 CASADI_PREFIX(f0)
#define casadi_s0 CASADI_PREFIX(s0)
#define casadi_s1 CASADI_PREFIX(s1)
#define casadi_s2 CASADI_PREFIX(s2)
#define casadi_sq CASADI_PREFIX(sq)

/* Symbol visibility in DLLs */
#ifndef CASADI_SYMBOL_EXPORT
  #if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
    #if defined(STATIC_LINKED)
      #define CASADI_SYMBOL_EXPORT
    #else
      #define CASADI_SYMBOL_EXPORT __declspec(dllexport)
    #endif
  #elif defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
    #define CASADI_SYMBOL_EXPORT __attribute__ ((visibility ("default")))
  #else
    #define CASADI_SYMBOL_EXPORT
  #endif
#endif

casadi_real casadi_sq(casadi_real x) { return x*x;}

static const casadi_int casadi_s0[124] = {120, 1, 0, 120, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119};
static const casadi_int casadi_s1[34] = {30, 1, 0, 30, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29};
static const casadi_int casadi_s2[368] = {56, 120, 0, 4, 8, 11, 16, 21, 24, 26, 28, 30, 34, 40, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 89, 96, 104, 111, 118, 126, 133, 140, 148, 155, 162, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 0, 9, 10, 11, 1, 9, 10, 11, 2, 9, 10, 3, 4, 5, 10, 11, 3, 4, 5, 9, 11, 5, 9, 10, 0, 6, 1, 7, 2, 8, 3, 9, 10, 11, 3, 4, 5, 9, 10, 11, 3, 4, 5, 9, 10, 11, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 28, 40, 29, 41, 30, 42, 31, 43, 32, 44, 33, 45, 34, 46, 35, 47, 36, 48, 37, 49, 38, 50, 39, 51, 0, 6, 9, 10, 11, 12, 13, 1, 7, 9, 10, 11, 14, 15, 2, 8, 9, 10, 12, 13, 14, 15, 0, 6, 9, 10, 11, 16, 17, 1, 7, 9, 10, 11, 18, 19, 2, 8, 9, 10, 16, 17, 18, 19, 0, 6, 9, 10, 11, 20, 21, 1, 7, 9, 10, 11, 22, 23, 2, 8, 9, 10, 20, 21, 22, 23, 0, 6, 9, 10, 11, 24, 25, 1, 7, 9, 10, 11, 26, 27, 2, 8, 9, 10, 24, 25, 26, 27, 28, 40, 29, 41, 30, 42, 31, 43, 32, 44, 33, 45, 34, 46, 35, 47, 36, 48, 37, 49, 38, 50, 39, 51, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 11, 10, 11, 28, 52, 29, 52, 30, 52, 31, 53, 32, 53, 33, 53, 34, 54, 35, 54, 36, 54, 37, 55, 38, 55, 39, 55, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51};

/* eval_jac_g_leg_complex_to_simple:(w[120],p[30])->(jac_g[56x120,245nz]) */
static int casadi_f0(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_real a0, a1, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a2, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a3, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a4, a40, a41, a42, a43, a44, a45, a46, a47, a48, a49, a5, a50, a51, a52, a53, a54, a55, a56, a57, a58, a59, a6, a60, a61, a62, a63, a64, a65, a66, a67, a68, a69, a7, a70, a71, a72, a73, a74, a75, a76, a77, a78, a79, a8, a80, a81, a82, a83, a84, a85, a86, a87, a88, a89, a9, a90, a91, a92, a93, a94, a95, a96, a97, a98;
  a0=-1.;
  if (res[0]!=0) res[0][0]=a0;
  a1=arg[0]? arg[0][4] : 0;
  a2=sin(a1);
  a3=arg[0]? arg[0][70] : 0;
  a4=arg[1]? arg[1][0] : 0;
  a5=(a3*a4);
  a6=(a2*a5);
  a7=arg[0]? arg[0][67] : 0;
  a8=(a7*a4);
  a9=(a2*a8);
  a6=(a6+a9);
  a9=arg[0]? arg[0][64] : 0;
  a10=(a9*a4);
  a11=(a2*a10);
  a6=(a6+a11);
  a11=arg[0]? arg[0][5] : 0;
  a12=sin(a11);
  a13=cos(a1);
  a14=arg[0]? arg[0][71] : 0;
  a15=(a14*a4);
  a16=(a13*a15);
  a17=arg[0]? arg[0][68] : 0;
  a18=(a17*a4);
  a19=(a13*a18);
  a20=(a16+a19);
  a21=arg[0]? arg[0][65] : 0;
  a22=(a21*a4);
  a23=(a13*a22);
  a20=(a20+a23);
  a24=arg[0]? arg[0][62] : 0;
  a25=(a24*a4);
  a26=(a13*a25);
  a20=(a20+a26);
  a27=(a12*a20);
  a6=(a6+a27);
  a27=arg[0]? arg[0][61] : 0;
  a28=(a27*a4);
  a29=(a2*a28);
  a6=(a6+a29);
  a6=(-a6);
  if (res[0]!=0) res[0][1]=a6;
  a6=cos(a11);
  a14=(a14*a4);
  a17=(a17*a4);
  a29=(a14+a17);
  a21=(a21*a4);
  a29=(a29+a21);
  a24=(a24*a4);
  a29=(a29+a24);
  a30=(a6*a29);
  a30=(-a30);
  if (res[0]!=0) res[0][2]=a30;
  a30=(a3*a4);
  a31=(a7*a4);
  a30=(a30+a31);
  a31=(a9*a4);
  a30=(a30+a31);
  a31=(a27*a4);
  a30=(a30+a31);
  if (res[0]!=0) res[0][3]=a30;
  if (res[0]!=0) res[0][4]=a0;
  a30=arg[0]? arg[0][69] : 0;
  a31=(a30*a4);
  a32=(a2*a31);
  a33=arg[0]? arg[0][66] : 0;
  a34=(a33*a4);
  a35=(a2*a34);
  a32=(a32+a35);
  a35=arg[0]? arg[0][63] : 0;
  a36=(a35*a4);
  a37=(a2*a36);
  a32=(a32+a37);
  a37=(a16+a19);
  a37=(a37+a23);
  a37=(a37+a26);
  a38=(a6*a37);
  a32=(a32+a38);
  a38=arg[0]? arg[0][60] : 0;
  a39=(a38*a4);
  a40=(a2*a39);
  a32=(a32+a40);
  if (res[0]!=0) res[0][5]=a32;
  a32=(a14+a17);
  a32=(a32+a21);
  a32=(a32+a24);
  a40=(a12*a32);
  a40=(-a40);
  if (res[0]!=0) res[0][6]=a40;
  a40=(a30*a4);
  a41=(a33*a4);
  a40=(a40+a41);
  a41=(a35*a4);
  a40=(a40+a41);
  a41=(a38*a4);
  a40=(a40+a41);
  a40=(-a40);
  if (res[0]!=0) res[0][7]=a40;
  if (res[0]!=0) res[0][8]=a0;
  a40=(a13*a6);
  a41=(a40*a5);
  a42=(a13*a12);
  a43=(a42*a31);
  a41=(a41-a43);
  a43=(a13*a6);
  a44=(a43*a8);
  a45=(a13*a12);
  a46=(a45*a34);
  a44=(a44-a46);
  a41=(a41+a44);
  a44=(a13*a6);
  a46=(a44*a10);
  a47=(a13*a12);
  a48=(a47*a36);
  a46=(a46-a48);
  a41=(a41+a46);
  a46=(a13*a6);
  a48=(a46*a28);
  a49=(a13*a12);
  a50=(a49*a39);
  a48=(a48-a50);
  a41=(a41+a48);
  a41=(-a41);
  if (res[0]!=0) res[0][9]=a41;
  a3=(a3*a4);
  a41=(a12*a3);
  a30=(a30*a4);
  a48=(a6*a30);
  a41=(a41+a48);
  a7=(a7*a4);
  a48=(a12*a7);
  a33=(a33*a4);
  a50=(a6*a33);
  a48=(a48+a50);
  a41=(a41+a48);
  a9=(a9*a4);
  a48=(a12*a9);
  a35=(a35*a4);
  a50=(a6*a35);
  a48=(a48+a50);
  a41=(a41+a48);
  a27=(a27*a4);
  a48=(a12*a27);
  a38=(a38*a4);
  a50=(a6*a38);
  a48=(a48+a50);
  a41=(a41+a48);
  if (res[0]!=0) res[0][10]=a41;
  a41=arg[0]? arg[0][3] : 0;
  a48=sin(a41);
  a50=arg[0]? arg[0][11] : 0;
  a51=(a4/a13);
  a52=(a2*a51);
  a53=(a50*a52);
  a53=(a48*a53);
  a54=cos(a41);
  a55=arg[0]? arg[0][10] : 0;
  a56=(a2*a51);
  a57=(a55*a56);
  a57=(a54*a57);
  a53=(a53-a57);
  a53=(a53+a0);
  if (res[0]!=0) res[0][11]=a53;
  a53=(a50*a4);
  a53=(a54*a53);
  a57=(a55*a4);
  a57=(a48*a57);
  a53=(a53+a57);
  if (res[0]!=0) res[0][12]=a53;
  a53=(a4/a13);
  a57=(a50*a53);
  a57=(a48*a57);
  a58=(a55*a53);
  a58=(a54*a58);
  a57=(a57-a58);
  if (res[0]!=0) res[0][13]=a57;
  a57=24358218631252112.;
  a58=arg[0]? arg[0][9] : 0;
  a59=-1.3877787807814460e-17;
  a59=(a59*a4);
  a60=(a58*a59);
  a61=(a57*a60);
  a62=(a55*a61);
  a63=-4.6021926780173911e-01;
  a64=arg[0]? arg[0][95] : 0;
  a64=(a64-a50);
  a65=(a63*a64);
  a62=(a62+a65);
  a62=(a54*a62);
  a65=26445640661418040.;
  a60=(a65*a60);
  a66=(a50*a60);
  a67=4.3125046780173909e-01;
  a68=arg[0]? arg[0][94] : 0;
  a68=(a68-a55);
  a69=(a67*a68);
  a66=(a66+a69);
  a66=(a48*a66);
  a62=(a62-a66);
  if (res[0]!=0) res[0][14]=a62;
  a68=(a67*a68);
  a62=(a13*a68);
  a66=(a58*a50);
  a69=(a66*a13);
  a70=3.6700698954086952e-01;
  a70=(a70*a4);
  a69=(a69*a70);
  a62=(a62-a69);
  a54=(a54*a62);
  a62=(a58*a55);
  a69=3.3803818954086950e-01;
  a69=(a69*a4);
  a71=(a13*a69);
  a72=(a62*a71);
  a73=4.6021926780173911e-01;
  a64=(a73*a64);
  a74=(a13*a64);
  a72=(a72+a74);
  a48=(a48*a72);
  a54=(a54-a48);
  if (res[0]!=0) res[0][15]=a54;
  a54=cos(a1);
  a48=sin(a41);
  a72=(a55*a48);
  a74=(a72*a51);
  a41=cos(a41);
  a75=(a50*a41);
  a76=(a75*a51);
  a74=(a74+a76);
  a74=(a54*a74);
  a1=sin(a1);
  a76=(a58*a13);
  a75=(a75*a2);
  a76=(a76+a75);
  a72=(a72*a2);
  a76=(a76+a72);
  a76=(a76/a13);
  a76=(a76/a13);
  a76=(a76*a4);
  a51=(a58*a51);
  a76=(a76-a51);
  a76=(a1*a76);
  a74=(a74+a76);
  a74=(-a74);
  if (res[0]!=0) res[0][16]=a74;
  if (res[0]!=0) res[0][17]=a0;
  a74=(a50*a41);
  a76=(a55*a48);
  a74=(a74+a76);
  a74=(a74/a13);
  a74=(a74/a13);
  a74=(a74*a4);
  a74=(a1*a74);
  a74=(-a74);
  if (res[0]!=0) res[0][18]=a74;
  a74=arg[1]? arg[1][11] : 0;
  a76=arg[0]? arg[0][0] : 0;
  a51=(a74-a76);
  a72=(a51*a5);
  a75=arg[1]? arg[1][12] : 0;
  a77=arg[0]? arg[0][1] : 0;
  a78=(a75-a77);
  a79=(a78*a31);
  a72=(a72-a79);
  a79=arg[1]? arg[1][8] : 0;
  a80=(a79-a76);
  a81=(a80*a8);
  a72=(a72+a81);
  a81=arg[1]? arg[1][9] : 0;
  a82=(a81-a77);
  a83=(a82*a34);
  a72=(a72-a83);
  a83=arg[1]? arg[1][5] : 0;
  a84=(a83-a76);
  a85=(a84*a10);
  a72=(a72+a85);
  a85=arg[1]? arg[1][6] : 0;
  a86=(a85-a77);
  a87=(a86*a36);
  a72=(a72-a87);
  a87=arg[1]? arg[1][2] : 0;
  a88=(a87-a76);
  a89=(a88*a28);
  a72=(a72+a89);
  a89=arg[1]? arg[1][3] : 0;
  a90=(a89-a77);
  a91=(a90*a39);
  a72=(a72-a91);
  a72=(a54*a72);
  a91=(a77*a6);
  a92=(a76*a12);
  a93=(a91-a92);
  a94=(a75*a6);
  a93=(a93-a94);
  a94=(a74*a12);
  a93=(a93+a94);
  a15=(a93*a15);
  a94=arg[1]? arg[1][13] : 0;
  a95=arg[0]? arg[0][2] : 0;
  a94=(a94-a95);
  a5=(a94*a5);
  a96=(a6*a5);
  a15=(a15+a96);
  a31=(a94*a31);
  a96=(a12*a31);
  a15=(a15-a96);
  a96=(a91-a92);
  a97=(a81*a6);
  a96=(a96-a97);
  a97=(a79*a12);
  a96=(a96+a97);
  a18=(a96*a18);
  a15=(a15+a18);
  a18=arg[1]? arg[1][10] : 0;
  a18=(a18-a95);
  a8=(a18*a8);
  a97=(a6*a8);
  a15=(a15+a97);
  a34=(a18*a34);
  a97=(a12*a34);
  a15=(a15-a97);
  a97=(a91-a92);
  a98=(a85*a6);
  a97=(a97-a98);
  a98=(a83*a12);
  a97=(a97+a98);
  a22=(a97*a22);
  a15=(a15+a22);
  a22=arg[1]? arg[1][7] : 0;
  a22=(a22-a95);
  a10=(a22*a10);
  a98=(a6*a10);
  a15=(a15+a98);
  a36=(a22*a36);
  a98=(a12*a36);
  a15=(a15-a98);
  a91=(a91-a92);
  a92=(a89*a6);
  a91=(a91-a92);
  a92=(a87*a12);
  a91=(a91+a92);
  a25=(a91*a25);
  a15=(a15+a25);
  a25=arg[1]? arg[1][4] : 0;
  a25=(a25-a95);
  a28=(a25*a28);
  a95=(a6*a28);
  a15=(a15+a95);
  a39=(a25*a39);
  a95=(a12*a39);
  a15=(a15-a95);
  a15=(a1*a15);
  a72=(a72-a15);
  if (res[0]!=0) res[0][19]=a72;
  a72=(a55*a50);
  a15=-2.8968800000000020e-02;
  a15=(a15*a4);
  a72=(a72*a15);
  a95=-9.3212278260869572e-02;
  a92=arg[0]? arg[0][93] : 0;
  a92=(a92-a58);
  a92=(a95*a92);
  a72=(a72+a92);
  a54=(a54*a72);
  a62=(a62*a41);
  a62=(a62*a69);
  a70=(a48*a70);
  a66=(a66*a70);
  a62=(a62-a66);
  a64=(a41*a64);
  a62=(a62+a64);
  a68=(a48*a68);
  a62=(a62+a68);
  a1=(a1*a62);
  a54=(a54-a1);
  if (res[0]!=0) res[0][20]=a54;
  if (res[0]!=0) res[0][21]=a0;
  a54=cos(a11);
  a1=(a74*a16);
  a31=(a13*a31);
  a1=(a1-a31);
  a31=(a79*a19);
  a1=(a1+a31);
  a34=(a13*a34);
  a1=(a1-a34);
  a34=(a83*a23);
  a1=(a1+a34);
  a36=(a13*a36);
  a1=(a1-a36);
  a36=(a87*a26);
  a1=(a1+a36);
  a20=(a76*a20);
  a1=(a1-a20);
  a39=(a13*a39);
  a1=(a1-a39);
  a1=(a54*a1);
  a11=sin(a11);
  a5=(a13*a5);
  a16=(a75*a16);
  a5=(a5-a16);
  a19=(a81*a19);
  a5=(a5-a19);
  a8=(a13*a8);
  a5=(a5+a8);
  a23=(a85*a23);
  a5=(a5-a23);
  a10=(a13*a10);
  a5=(a5+a10);
  a26=(a89*a26);
  a5=(a5-a26);
  a37=(a77*a37);
  a5=(a5+a37);
  a28=(a13*a28);
  a5=(a5+a28);
  a5=(a11*a5);
  a1=(a1-a5);
  if (res[0]!=0) res[0][22]=a1;
  a1=(a75*a14);
  a3=(a94*a3);
  a1=(a1-a3);
  a3=(a81*a17);
  a1=(a1+a3);
  a7=(a18*a7);
  a1=(a1-a7);
  a7=(a85*a21);
  a1=(a1+a7);
  a9=(a22*a9);
  a1=(a1-a9);
  a9=(a89*a24);
  a1=(a1+a9);
  a32=(a77*a32);
  a1=(a1-a32);
  a27=(a25*a27);
  a1=(a1-a27);
  a54=(a54*a1);
  a14=(a74*a14);
  a30=(a94*a30);
  a14=(a14-a30);
  a17=(a79*a17);
  a14=(a14+a17);
  a33=(a18*a33);
  a14=(a14-a33);
  a21=(a83*a21);
  a14=(a14+a21);
  a35=(a22*a35);
  a14=(a14-a35);
  a24=(a87*a24);
  a14=(a14+a24);
  a29=(a76*a29);
  a14=(a14-a29);
  a38=(a25*a38);
  a14=(a14-a38);
  a11=(a11*a14);
  a54=(a54-a11);
  if (res[0]!=0) res[0][23]=a54;
  a54=(-a4);
  if (res[0]!=0) res[0][24]=a54;
  if (res[0]!=0) res[0][25]=a0;
  a54=(-a4);
  if (res[0]!=0) res[0][26]=a54;
  if (res[0]!=0) res[0][27]=a0;
  a54=(-a4);
  if (res[0]!=0) res[0][28]=a54;
  if (res[0]!=0) res[0][29]=a0;
  a54=(-a4);
  if (res[0]!=0) res[0][30]=a54;
  if (res[0]!=0) res[0][31]=a95;
  a54=(a50*a41);
  a65=(a65*a54);
  a54=(a55*a48);
  a57=(a57*a54);
  a65=(a65+a57);
  a65=(a65*a59);
  if (res[0]!=0) res[0][32]=a65;
  a71=(a41*a71);
  a65=(a55*a71);
  a70=(a13*a70);
  a59=(a50*a70);
  a65=(a65-a59);
  a95=(a95*a2);
  a65=(a65-a95);
  if (res[0]!=0) res[0][33]=a65;
  a56=(a48*a56);
  a56=(-a56);
  if (res[0]!=0) res[0][34]=a56;
  a56=(a41*a4);
  a56=(-a56);
  if (res[0]!=0) res[0][35]=a56;
  a56=(a48*a53);
  a56=(-a56);
  if (res[0]!=0) res[0][36]=a56;
  a56=2.8968800000000020e-02;
  a56=(a56*a4);
  a65=(a50*a56);
  if (res[0]!=0) res[0][37]=a65;
  a61=(a48*a61);
  a65=(a67*a41);
  a61=(a61-a65);
  if (res[0]!=0) res[0][38]=a61;
  a71=(a58*a71);
  a15=(a2*a15);
  a50=(a50*a15);
  a71=(a71+a50);
  a50=(a13*a48);
  a67=(a67*a50);
  a71=(a71-a67);
  if (res[0]!=0) res[0][39]=a71;
  a52=(a41*a52);
  a52=(-a52);
  if (res[0]!=0) res[0][40]=a52;
  a52=(a48*a4);
  if (res[0]!=0) res[0][41]=a52;
  a53=(a41*a53);
  a53=(-a53);
  if (res[0]!=0) res[0][42]=a53;
  a56=(a55*a56);
  if (res[0]!=0) res[0][43]=a56;
  a60=(a41*a60);
  a63=(a63*a48);
  a60=(a60-a63);
  if (res[0]!=0) res[0][44]=a60;
  a55=(a55*a15);
  a58=(a58*a70);
  a55=(a55-a58);
  a41=(a41*a13);
  a73=(a73*a41);
  a55=(a55-a73);
  if (res[0]!=0) res[0][45]=a55;
  if (res[0]!=0) res[0][46]=a0;
  if (res[0]!=0) res[0][47]=a0;
  if (res[0]!=0) res[0][48]=a0;
  if (res[0]!=0) res[0][49]=a0;
  if (res[0]!=0) res[0][50]=a0;
  if (res[0]!=0) res[0][51]=a0;
  if (res[0]!=0) res[0][52]=a0;
  if (res[0]!=0) res[0][53]=a0;
  if (res[0]!=0) res[0][54]=a0;
  if (res[0]!=0) res[0][55]=a0;
  if (res[0]!=0) res[0][56]=a0;
  if (res[0]!=0) res[0][57]=a0;
  a55=(-a4);
  if (res[0]!=0) res[0][58]=a55;
  if (res[0]!=0) res[0][59]=a0;
  a55=(-a4);
  if (res[0]!=0) res[0][60]=a55;
  if (res[0]!=0) res[0][61]=a0;
  a55=(-a4);
  if (res[0]!=0) res[0][62]=a55;
  if (res[0]!=0) res[0][63]=a0;
  a55=(-a4);
  if (res[0]!=0) res[0][64]=a55;
  if (res[0]!=0) res[0][65]=a0;
  a55=(-a4);
  if (res[0]!=0) res[0][66]=a55;
  if (res[0]!=0) res[0][67]=a0;
  a55=(-a4);
  if (res[0]!=0) res[0][68]=a55;
  if (res[0]!=0) res[0][69]=a0;
  a55=(-a4);
  if (res[0]!=0) res[0][70]=a55;
  if (res[0]!=0) res[0][71]=a0;
  a55=(-a4);
  if (res[0]!=0) res[0][72]=a55;
  if (res[0]!=0) res[0][73]=a0;
  a55=(-a4);
  if (res[0]!=0) res[0][74]=a55;
  if (res[0]!=0) res[0][75]=a0;
  a55=(-a4);
  if (res[0]!=0) res[0][76]=a55;
  if (res[0]!=0) res[0][77]=a0;
  a55=(-a4);
  if (res[0]!=0) res[0][78]=a55;
  if (res[0]!=0) res[0][79]=a0;
  a55=(-a4);
  if (res[0]!=0) res[0][80]=a55;
  if (res[0]!=0) res[0][81]=a0;
  a55=7.5187969924812026e-02;
  a41=5.0000000000000000e-01;
  a58=casadi_sq(a4);
  a70=(a41*a58);
  a70=(a55*a70);
  a70=(-a70);
  if (res[0]!=0) res[0][82]=a70;
  a15=(a55*a4);
  a15=(-a15);
  if (res[0]!=0) res[0][83]=a15;
  a90=(a2*a90);
  a49=(a49*a25);
  a90=(a90+a49);
  a90=(a90*a4);
  a90=(-a90);
  if (res[0]!=0) res[0][84]=a90;
  a90=(a6*a25);
  a90=(a90*a4);
  a90=(-a90);
  if (res[0]!=0) res[0][85]=a90;
  a90=(a77-a89);
  a90=(a90*a4);
  a90=(-a90);
  if (res[0]!=0) res[0][86]=a90;
  a90=1.;
  if (res[0]!=0) res[0][87]=a90;
  if (res[0]!=0) res[0][88]=a0;
  a49=(a41*a58);
  a49=(a55*a49);
  a49=(-a49);
  if (res[0]!=0) res[0][89]=a49;
  a60=(a55*a4);
  a60=(-a60);
  if (res[0]!=0) res[0][90]=a60;
  a48=(a2*a88);
  a46=(a46*a25);
  a48=(a48+a46);
  a48=(a48*a4);
  if (res[0]!=0) res[0][91]=a48;
  a25=(a12*a25);
  a25=(a25*a4);
  a25=(-a25);
  if (res[0]!=0) res[0][92]=a25;
  a88=(a88*a4);
  a88=(-a88);
  if (res[0]!=0) res[0][93]=a88;
  if (res[0]!=0) res[0][94]=a90;
  if (res[0]!=0) res[0][95]=a0;
  a58=(a41*a58);
  a58=(a55*a58);
  a58=(-a58);
  if (res[0]!=0) res[0][96]=a58;
  a55=(a55*a4);
  a55=(-a55);
  if (res[0]!=0) res[0][97]=a55;
  a91=(a13*a91);
  a91=(a91*a4);
  if (res[0]!=0) res[0][98]=a91;
  a76=(a76*a6);
  a91=(a77*a12);
  a88=(a76+a91);
  a87=(a87*a6);
  a88=(a88-a87);
  a89=(a89*a12);
  a88=(a88-a89);
  a88=(a88*a4);
  a88=(-a88);
  if (res[0]!=0) res[0][99]=a88;
  a88=arg[1]? arg[1][1] : 0;
  a89=(-a88);
  if (res[0]!=0) res[0][100]=a89;
  a89=(-a88);
  if (res[0]!=0) res[0][101]=a89;
  a89=(-a88);
  if (res[0]!=0) res[0][102]=a89;
  a89=(-a88);
  if (res[0]!=0) res[0][103]=a89;
  if (res[0]!=0) res[0][104]=a70;
  if (res[0]!=0) res[0][105]=a15;
  a86=(a2*a86);
  a47=(a47*a22);
  a86=(a86+a47);
  a86=(a86*a4);
  a86=(-a86);
  if (res[0]!=0) res[0][106]=a86;
  a86=(a6*a22);
  a86=(a86*a4);
  a86=(-a86);
  if (res[0]!=0) res[0][107]=a86;
  a86=(a77-a85);
  a86=(a86*a4);
  a86=(-a86);
  if (res[0]!=0) res[0][108]=a86;
  if (res[0]!=0) res[0][109]=a90;
  if (res[0]!=0) res[0][110]=a0;
  if (res[0]!=0) res[0][111]=a49;
  if (res[0]!=0) res[0][112]=a60;
  a86=(a2*a84);
  a44=(a44*a22);
  a86=(a86+a44);
  a86=(a86*a4);
  if (res[0]!=0) res[0][113]=a86;
  a22=(a12*a22);
  a22=(a22*a4);
  a22=(-a22);
  if (res[0]!=0) res[0][114]=a22;
  a84=(a84*a4);
  a84=(-a84);
  if (res[0]!=0) res[0][115]=a84;
  if (res[0]!=0) res[0][116]=a90;
  if (res[0]!=0) res[0][117]=a0;
  if (res[0]!=0) res[0][118]=a58;
  if (res[0]!=0) res[0][119]=a55;
  a97=(a13*a97);
  a97=(a97*a4);
  if (res[0]!=0) res[0][120]=a97;
  a97=(a76+a91);
  a83=(a83*a6);
  a97=(a97-a83);
  a85=(a85*a12);
  a97=(a97-a85);
  a97=(a97*a4);
  a97=(-a97);
  if (res[0]!=0) res[0][121]=a97;
  a97=(-a88);
  if (res[0]!=0) res[0][122]=a97;
  a97=(-a88);
  if (res[0]!=0) res[0][123]=a97;
  a97=(-a88);
  if (res[0]!=0) res[0][124]=a97;
  a97=(-a88);
  if (res[0]!=0) res[0][125]=a97;
  if (res[0]!=0) res[0][126]=a70;
  if (res[0]!=0) res[0][127]=a15;
  a82=(a2*a82);
  a45=(a45*a18);
  a82=(a82+a45);
  a82=(a82*a4);
  a82=(-a82);
  if (res[0]!=0) res[0][128]=a82;
  a82=(a6*a18);
  a82=(a82*a4);
  a82=(-a82);
  if (res[0]!=0) res[0][129]=a82;
  a82=(a77-a81);
  a82=(a82*a4);
  a82=(-a82);
  if (res[0]!=0) res[0][130]=a82;
  if (res[0]!=0) res[0][131]=a90;
  if (res[0]!=0) res[0][132]=a0;
  if (res[0]!=0) res[0][133]=a49;
  if (res[0]!=0) res[0][134]=a60;
  a82=(a2*a80);
  a43=(a43*a18);
  a82=(a82+a43);
  a82=(a82*a4);
  if (res[0]!=0) res[0][135]=a82;
  a18=(a12*a18);
  a18=(a18*a4);
  a18=(-a18);
  if (res[0]!=0) res[0][136]=a18;
  a80=(a80*a4);
  a80=(-a80);
  if (res[0]!=0) res[0][137]=a80;
  if (res[0]!=0) res[0][138]=a90;
  if (res[0]!=0) res[0][139]=a0;
  if (res[0]!=0) res[0][140]=a58;
  if (res[0]!=0) res[0][141]=a55;
  a96=(a13*a96);
  a96=(a96*a4);
  if (res[0]!=0) res[0][142]=a96;
  a96=(a76+a91);
  a79=(a79*a6);
  a96=(a96-a79);
  a81=(a81*a12);
  a96=(a96-a81);
  a96=(a96*a4);
  a96=(-a96);
  if (res[0]!=0) res[0][143]=a96;
  a96=(-a88);
  if (res[0]!=0) res[0][144]=a96;
  a96=(-a88);
  if (res[0]!=0) res[0][145]=a96;
  a96=(-a88);
  if (res[0]!=0) res[0][146]=a96;
  a96=(-a88);
  if (res[0]!=0) res[0][147]=a96;
  if (res[0]!=0) res[0][148]=a70;
  if (res[0]!=0) res[0][149]=a15;
  a78=(a2*a78);
  a42=(a42*a94);
  a78=(a78+a42);
  a78=(a78*a4);
  a78=(-a78);
  if (res[0]!=0) res[0][150]=a78;
  a78=(a6*a94);
  a78=(a78*a4);
  a78=(-a78);
  if (res[0]!=0) res[0][151]=a78;
  a77=(a77-a75);
  a77=(a77*a4);
  a77=(-a77);
  if (res[0]!=0) res[0][152]=a77;
  if (res[0]!=0) res[0][153]=a90;
  if (res[0]!=0) res[0][154]=a0;
  if (res[0]!=0) res[0][155]=a49;
  if (res[0]!=0) res[0][156]=a60;
  a2=(a2*a51);
  a40=(a40*a94);
  a2=(a2+a40);
  a2=(a2*a4);
  if (res[0]!=0) res[0][157]=a2;
  a94=(a12*a94);
  a94=(a94*a4);
  a94=(-a94);
  if (res[0]!=0) res[0][158]=a94;
  a51=(a51*a4);
  a51=(-a51);
  if (res[0]!=0) res[0][159]=a51;
  if (res[0]!=0) res[0][160]=a90;
  if (res[0]!=0) res[0][161]=a0;
  if (res[0]!=0) res[0][162]=a58;
  if (res[0]!=0) res[0][163]=a55;
  a13=(a13*a93);
  a13=(a13*a4);
  if (res[0]!=0) res[0][164]=a13;
  a76=(a76+a91);
  a74=(a74*a6);
  a76=(a76-a74);
  a75=(a75*a12);
  a76=(a76-a75);
  a76=(a76*a4);
  a76=(-a76);
  if (res[0]!=0) res[0][165]=a76;
  a76=(-a88);
  if (res[0]!=0) res[0][166]=a76;
  a76=(-a88);
  if (res[0]!=0) res[0][167]=a76;
  a76=(-a88);
  if (res[0]!=0) res[0][168]=a76;
  a88=(-a88);
  if (res[0]!=0) res[0][169]=a88;
  a88=100.;
  a76=casadi_sq(a4);
  a75=(a41*a76);
  a75=(a88*a75);
  a75=(-a75);
  if (res[0]!=0) res[0][170]=a75;
  a75=(a88*a4);
  a75=(-a75);
  if (res[0]!=0) res[0][171]=a75;
  a75=(a41*a76);
  a75=(a88*a75);
  a75=(-a75);
  if (res[0]!=0) res[0][172]=a75;
  a75=(a88*a4);
  a75=(-a75);
  if (res[0]!=0) res[0][173]=a75;
  a75=(a41*a76);
  a75=(a88*a75);
  a75=(-a75);
  if (res[0]!=0) res[0][174]=a75;
  a75=(a88*a4);
  a75=(-a75);
  if (res[0]!=0) res[0][175]=a75;
  a75=(a41*a76);
  a75=(a88*a75);
  a75=(-a75);
  if (res[0]!=0) res[0][176]=a75;
  a75=(a88*a4);
  a75=(-a75);
  if (res[0]!=0) res[0][177]=a75;
  a75=(a41*a76);
  a75=(a88*a75);
  a75=(-a75);
  if (res[0]!=0) res[0][178]=a75;
  a75=(a88*a4);
  a75=(-a75);
  if (res[0]!=0) res[0][179]=a75;
  a75=(a41*a76);
  a75=(a88*a75);
  a75=(-a75);
  if (res[0]!=0) res[0][180]=a75;
  a75=(a88*a4);
  a75=(-a75);
  if (res[0]!=0) res[0][181]=a75;
  a75=(a41*a76);
  a75=(a88*a75);
  a75=(-a75);
  if (res[0]!=0) res[0][182]=a75;
  a75=(a88*a4);
  a75=(-a75);
  if (res[0]!=0) res[0][183]=a75;
  a75=(a41*a76);
  a75=(a88*a75);
  a75=(-a75);
  if (res[0]!=0) res[0][184]=a75;
  a75=(a88*a4);
  a75=(-a75);
  if (res[0]!=0) res[0][185]=a75;
  a75=(a41*a76);
  a75=(a88*a75);
  a75=(-a75);
  if (res[0]!=0) res[0][186]=a75;
  a75=(a88*a4);
  a75=(-a75);
  if (res[0]!=0) res[0][187]=a75;
  a75=(a41*a76);
  a75=(a88*a75);
  a75=(-a75);
  if (res[0]!=0) res[0][188]=a75;
  a75=(a88*a4);
  a75=(-a75);
  if (res[0]!=0) res[0][189]=a75;
  a75=(a41*a76);
  a75=(a88*a75);
  a75=(-a75);
  if (res[0]!=0) res[0][190]=a75;
  a75=(a88*a4);
  a75=(-a75);
  if (res[0]!=0) res[0][191]=a75;
  a41=(a41*a76);
  a41=(a88*a41);
  a41=(-a41);
  if (res[0]!=0) res[0][192]=a41;
  a88=(a88*a4);
  a88=(-a88);
  if (res[0]!=0) res[0][193]=a88;
  if (res[0]!=0) res[0][194]=a90;
  if (res[0]!=0) res[0][195]=a90;
  if (res[0]!=0) res[0][196]=a90;
  if (res[0]!=0) res[0][197]=a90;
  if (res[0]!=0) res[0][198]=a90;
  if (res[0]!=0) res[0][199]=a90;
  if (res[0]!=0) res[0][200]=a90;
  if (res[0]!=0) res[0][201]=a90;
  if (res[0]!=0) res[0][202]=a90;
  a88=9.3212278260869572e-02;
  if (res[0]!=0) res[0][203]=a88;
  if (res[0]!=0) res[0][204]=a95;
  if (res[0]!=0) res[0][205]=a65;
  if (res[0]!=0) res[0][206]=a67;
  if (res[0]!=0) res[0][207]=a63;
  if (res[0]!=0) res[0][208]=a73;
  if (res[0]!=0) res[0][209]=a90;
  a73=arg[1]? arg[1][18] : 0;
  a63=arg[1]? arg[1][20] : 0;
  a73=(a73/a63);
  a73=(-a73);
  if (res[0]!=0) res[0][210]=a73;
  if (res[0]!=0) res[0][211]=a90;
  a73=arg[1]? arg[1][19] : 0;
  a73=(a73/a63);
  a73=(-a73);
  if (res[0]!=0) res[0][212]=a73;
  if (res[0]!=0) res[0][213]=a90;
  if (res[0]!=0) res[0][214]=a0;
  if (res[0]!=0) res[0][215]=a90;
  a73=arg[1]? arg[1][21] : 0;
  a63=arg[1]? arg[1][23] : 0;
  a73=(a73/a63);
  a73=(-a73);
  if (res[0]!=0) res[0][216]=a73;
  if (res[0]!=0) res[0][217]=a90;
  a73=arg[1]? arg[1][22] : 0;
  a73=(a73/a63);
  a73=(-a73);
  if (res[0]!=0) res[0][218]=a73;
  if (res[0]!=0) res[0][219]=a90;
  if (res[0]!=0) res[0][220]=a0;
  if (res[0]!=0) res[0][221]=a90;
  a73=arg[1]? arg[1][24] : 0;
  a63=arg[1]? arg[1][26] : 0;
  a73=(a73/a63);
  a73=(-a73);
  if (res[0]!=0) res[0][222]=a73;
  if (res[0]!=0) res[0][223]=a90;
  a73=arg[1]? arg[1][25] : 0;
  a73=(a73/a63);
  a73=(-a73);
  if (res[0]!=0) res[0][224]=a73;
  if (res[0]!=0) res[0][225]=a90;
  if (res[0]!=0) res[0][226]=a0;
  if (res[0]!=0) res[0][227]=a90;
  a73=arg[1]? arg[1][27] : 0;
  a63=arg[1]? arg[1][29] : 0;
  a73=(a73/a63);
  a73=(-a73);
  if (res[0]!=0) res[0][228]=a73;
  if (res[0]!=0) res[0][229]=a90;
  a73=arg[1]? arg[1][28] : 0;
  a73=(a73/a63);
  a73=(-a73);
  if (res[0]!=0) res[0][230]=a73;
  if (res[0]!=0) res[0][231]=a90;
  if (res[0]!=0) res[0][232]=a0;
  if (res[0]!=0) res[0][233]=a90;
  if (res[0]!=0) res[0][234]=a90;
  if (res[0]!=0) res[0][235]=a90;
  if (res[0]!=0) res[0][236]=a90;
  if (res[0]!=0) res[0][237]=a90;
  if (res[0]!=0) res[0][238]=a90;
  if (res[0]!=0) res[0][239]=a90;
  if (res[0]!=0) res[0][240]=a90;
  if (res[0]!=0) res[0][241]=a90;
  if (res[0]!=0) res[0][242]=a90;
  if (res[0]!=0) res[0][243]=a90;
  if (res[0]!=0) res[0][244]=a90;
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT int eval_jac_g_leg_complex_to_simple(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem){
  return casadi_f0(arg, res, iw, w, mem);
}

extern "C" CASADI_SYMBOL_EXPORT int eval_jac_g_leg_complex_to_simple_alloc_mem(void) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT int eval_jac_g_leg_complex_to_simple_init_mem(int mem) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT void eval_jac_g_leg_complex_to_simple_free_mem(int mem) {
}

extern "C" CASADI_SYMBOL_EXPORT int eval_jac_g_leg_complex_to_simple_checkout(void) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT void eval_jac_g_leg_complex_to_simple_release(int mem) {
}

extern "C" CASADI_SYMBOL_EXPORT void eval_jac_g_leg_complex_to_simple_incref(void) {
}

extern "C" CASADI_SYMBOL_EXPORT void eval_jac_g_leg_complex_to_simple_decref(void) {
}

extern "C" CASADI_SYMBOL_EXPORT casadi_int eval_jac_g_leg_complex_to_simple_n_in(void) { return 2;}

extern "C" CASADI_SYMBOL_EXPORT casadi_int eval_jac_g_leg_complex_to_simple_n_out(void) { return 1;}

extern "C" CASADI_SYMBOL_EXPORT casadi_real eval_jac_g_leg_complex_to_simple_default_in(casadi_int i){
  switch (i) {
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const char* eval_jac_g_leg_complex_to_simple_name_in(casadi_int i){
  switch (i) {
    case 0: return "w";
    case 1: return "p";
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const char* eval_jac_g_leg_complex_to_simple_name_out(casadi_int i){
  switch (i) {
    case 0: return "jac_g";
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const casadi_int* eval_jac_g_leg_complex_to_simple_sparsity_in(casadi_int i) {
  switch (i) {
    case 0: return casadi_s0;
    case 1: return casadi_s1;
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const casadi_int* eval_jac_g_leg_complex_to_simple_sparsity_out(casadi_int i) {
  switch (i) {
    case 0: return casadi_s2;
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT int eval_jac_g_leg_complex_to_simple_work(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w) {
  if (sz_arg) *sz_arg = 2;
  if (sz_res) *sz_res = 1;
  if (sz_iw) *sz_iw = 0;
  if (sz_w) *sz_w = 0;
  return 0;
}


